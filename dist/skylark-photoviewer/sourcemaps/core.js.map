{"version":3,"sources":["core.js"],"names":["define","$","DEFAULTS","Constants","Utilities","draggable","movable","resizable","PhotoViewer","[object Object]","items","options","el","this","extend","isArray","footerToolbar","headerToolbar","$el","isOpened","isMaximized","isRotated","rotateAngle","isDoResize","imageData","modalData","width","height","left","top","init","opts","groupData","groupIndex","PUBLIC_VARS","imgSrc","open","loadImage","$photoviewer","dragHandle","CLASS_NS","$stage","$image","modalWidth","modalHeight","toolbar","btns","btnsHTML","each","index","item","btnClass","NS","indexOf","i18n","icons","customButtons","title","text","_createBtns","_createTitle","photoviewerHTML","_createTemplate","find","$title","$close","$maximize","$minimize","$zoomIn","$zoomOut","$actualSize","$fullscreen","$rotateLeft","$rotateRight","$prev","$next","addClass","css","appendTo","eq","append","_addEvents","_addCustomButtonEvents","_triggerHook","multiInstances","remove","length","fixedContent","overflow","hasScrollbar","scrollbarWidth","getScrollbarWidth","padding-right","build","setModalPos","get","focus","zIndex","$W","off","RESIZE_EVENT","EVENT_NS","modal","winWidth","winHeight","scrollLeft","$D","scrollTop","initMaximized","img","stageCSS","right","bottom","borderLeft","borderRight","borderTop","borderBottom","parseFloat","gapThreshold","scale","Math","min","minWidth","max","minHeight","modalCSSObj","fixedModalSize","round","initAnimation","animate","setImageSize","stageWidth","stageHeight","stageData","w","h","getImageScaleToStage","ceil","initWidth","initHeight","initLeft","initTop","setGrabCursor","imageLoaded","removeClass","progressiveLoading","fadeIn","fn","err","removeAttr","attr","hide","preloadImage","originalWidth","originalHeight","fixedModalPos","setModalSize","call","setImageTitle","url","getImageNameFromUrl","html","step","jumpTo","src","e","preventDefault","delta","deltaY","wheelDelta","detail","ratio","ratioThreshold","pointer","x","clientX","offset","y","clientY","zoom","origin","maxRatio","minRatio","zoomTo","imgData","newWidth","newHeight","newLeft","newTop","Î´","imgNewWidth","imgNewHeight","offsetX","offsetY","abs","angle","rotateTo","transform","throttle","initModalLeft","initModalTop","requestFullscreen","keyboard","keyCode","which","charCode","ctrlKey","metaKey","altKey","jump","rotate","close","CLICK_EVENT","on","WHEEL_EVENT","wheel","fullscreen","maximize","KEYDOWN_EVENT","_keydown","resize","btnKey","click","apply","data","callbacks","prototype","window"],"mappings":"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","file":"../core.js","sourcesContent":["define([\n    './domq',\n    './defaults',\n    './constants',\n    './utilities',\n    './draggable',\n    './movable',\n    './resizable'\n], function ($, DEFAULTS, Constants, Utilities, draggable, movable, resizable) {\n    'use strict';\n    class PhotoViewer {\n        constructor(items, options, el) {\n            this.options = $.extend(true, {}, DEFAULTS, options);\n            if (options && $.isArray(options.footerToolbar)) {\n                this.options.footerToolbar = options.footerToolbar;\n            }\n            if (options && $.isArray(options.headerToolbar)) {\n                this.options.headerToolbar = options.headerToolbar;\n            }\n            this.$el = $(el);\n            this.isOpened = false;\n            this.isMaximized = false;\n            this.isRotated = false;\n            this.rotateAngle = 0;\n            this.isDoResize = false;\n            this.imageData = {};\n            this.modalData = {\n                width: null,\n                height: null,\n                left: null,\n                top: null\n            };\n            this.init(items, this.options);\n        }\n        init(items, opts) {\n            this.groupData = items;\n            this.groupIndex = opts['index'];\n            Constants.PUBLIC_VARS['zIndex'] = Constants.PUBLIC_VARS['zIndex'] === 0 ? opts['zIndex'] : Constants.PUBLIC_VARS['zIndex'];\n            const imgSrc = items[this.groupIndex]['src'];\n            this.open();\n            this.loadImage(imgSrc);\n            if (opts.draggable) {\n                this.draggable(this.$photoviewer, this.dragHandle, Constants.CLASS_NS + '-button');\n            }\n            if (opts.movable) {\n                this.movable(this.$stage, this.$image);\n            }\n            if (opts.resizable) {\n                this.resizable(this.$photoviewer, this.$stage, this.$image, opts.modalWidth, opts.modalHeight);\n            }\n        }\n        _createBtns(toolbar) {\n            const btns = [\n                'minimize',\n                'maximize',\n                'close',\n                'zoomIn',\n                'zoomOut',\n                'prev',\n                'next',\n                'fullscreen',\n                'actualSize',\n                'rotateLeft',\n                'rotateRight'\n            ];\n            let btnsHTML = '';\n            $.each(toolbar, (index, item) => {\n                const btnClass = `${ Constants.NS }-button ${ Constants.NS }-button-${ item }`;\n                if (btns.indexOf(item) >= 0) {\n                    btnsHTML += `<button class=\"${ btnClass }\" title=\"${ this.options.i18n[item] }\">\n          ${ this.options.icons[item] }\n          </button>`;\n                } else if (this.options.customButtons[item]) {\n                    btnsHTML += `<button class=\"${ btnClass }\" title=\"${ this.options.customButtons[item].title || '' }\">\n          ${ this.options.customButtons[item].text }\n          </button>`;\n                }\n            });\n            return btnsHTML;\n        }\n        _createTitle() {\n            return this.options.title ? `<div class=\"${ Constants.NS }-title\"></div>` : '';\n        }\n        _createTemplate() {\n            const photoviewerHTML = `<div class=\"${ Constants.NS }-modal\" tabindex=\"0\">\n        <div class=\"${ Constants.NS }-inner\">\n          <div class=\"${ Constants.NS }-header\">\n            <div class=\"${ Constants.NS }-toolbar ${ Constants.NS }-toolbar-header\">\n            ${ this._createBtns(this.options.headerToolbar) }\n            </div>\n            ${ this._createTitle() }\n          </div>\n          <div class=\"${ Constants.NS }-stage\">\n            <img class=\"${ Constants.NS }-image\" src=\"\" alt=\"\" />\n          </div>\n          <div class=\"${ Constants.NS }-footer\">\n            <div class=\"${ Constants.NS }-toolbar ${ Constants.NS }-toolbar-footer\">\n            ${ this._createBtns(this.options.footerToolbar) }\n            </div>\n          </div>\n        </div>\n      </div>`;\n            return photoviewerHTML;\n        }\n        build() {\n            const photoviewerHTML = this._createTemplate();\n            const $photoviewer = $(photoviewerHTML);\n            this.$photoviewer = $photoviewer;\n            this.$stage = $photoviewer.find(Constants.CLASS_NS + '-stage');\n            this.$title = $photoviewer.find(Constants.CLASS_NS + '-title');\n            this.$image = $photoviewer.find(Constants.CLASS_NS + '-image');\n            this.$close = $photoviewer.find(Constants.CLASS_NS + '-button-close');\n            this.$maximize = $photoviewer.find(Constants.CLASS_NS + '-button-maximize');\n            this.$minimize = $photoviewer.find(Constants.CLASS_NS + '-button-minimize');\n            this.$zoomIn = $photoviewer.find(Constants.CLASS_NS + '-button-zoomIn');\n            this.$zoomOut = $photoviewer.find(Constants.CLASS_NS + '-button-zoomOut');\n            this.$actualSize = $photoviewer.find(Constants.CLASS_NS + '-button-actualSize');\n            this.$fullscreen = $photoviewer.find(Constants.CLASS_NS + '-button-fullscreen');\n            this.$rotateLeft = $photoviewer.find(Constants.CLASS_NS + '-button-rotateLeft');\n            this.$rotateRight = $photoviewer.find(Constants.CLASS_NS + '-button-rotateRight');\n            this.$prev = $photoviewer.find(Constants.CLASS_NS + '-button-prev');\n            this.$next = $photoviewer.find(Constants.CLASS_NS + '-button-next');\n            this.$stage.addClass('stage-ready');\n            this.$image.addClass('image-ready');\n            this.$photoviewer.css('z-index', Constants.PUBLIC_VARS['zIndex']);\n            if (!this.options.dragHandle || this.options.dragHandle === Constants.CLASS_NS + '-modal') {\n                this.dragHandle = this.$photoviewer;\n            } else {\n                this.dragHandle = this.$photoviewer.find(this.options.dragHandle);\n            }\n            $(this.options.appendTo).eq(0).append(this.$photoviewer);\n            this._addEvents();\n            this._addCustomButtonEvents();\n        }\n        open() {\n            this._triggerHook('beforeOpen', this);\n            if (!this.options.multiInstances) {\n                $(Constants.CLASS_NS + '-modal').eq(0).remove();\n            }\n            if (!$(Constants.CLASS_NS + '-modal').length && this.options.fixedContent) {\n                $('html').css({ overflow: 'hidden' });\n                if (Utilities.hasScrollbar()) {\n                    const scrollbarWidth = Utilities.getScrollbarWidth();\n                    if (scrollbarWidth) {\n                        $('html').css({ 'padding-right': scrollbarWidth });\n                    }\n                }\n            }\n            this.build();\n            this.setModalPos(this.$photoviewer);\n            this.$photoviewer.get(0).focus();\n            this._triggerHook('opened', this);\n        }\n        close() {\n            this._triggerHook('beforeClose', this);\n            this.$photoviewer.remove();\n            this.isOpened = false;\n            this.isMaximized = false;\n            this.isRotated = false;\n            this.rotateAngle = 0;\n            if (!$(Constants.CLASS_NS + '-modal').length) {\n                if (this.options.fixedContent) {\n                    $('html').css({\n                        overflow: '',\n                        'padding-right': ''\n                    });\n                }\n                if (this.options.multiInstances) {\n                    Constants.PUBLIC_VARS['zIndex'] = this.options.zIndex;\n                }\n                Constants.$W.off(Constants.RESIZE_EVENT + Constants.EVENT_NS);\n            }\n            this._triggerHook('closed', this);\n        }\n        setModalPos(modal) {\n            const winWidth = Constants.$W.width();\n            const winHeight = Constants.$W.height();\n            const scrollLeft = Constants.$D.scrollLeft();\n            const scrollTop = Constants.$D.scrollTop();\n            const modalWidth = this.options.modalWidth;\n            const modalHeight = this.options.modalHeight;\n            if (this.options.initMaximized) {\n                modal.addClass(Constants.NS + '-maximize');\n                modal.css({\n                    width: '100%',\n                    height: '100%',\n                    left: 0,\n                    top: 0\n                });\n                this.isOpened = true;\n                this.isMaximized = true;\n            } else {\n                modal.css({\n                    width: modalWidth,\n                    height: modalHeight,\n                    left: (winWidth - modalWidth) / 2 + scrollLeft + 'px',\n                    top: (winHeight - modalHeight) / 2 + scrollTop + 'px'\n                });\n            }\n        }\n        setModalSize(img) {\n            const winWidth = Constants.$W.width();\n            const winHeight = Constants.$W.height();\n            const scrollLeft = Constants.$D.scrollLeft();\n            const scrollTop = Constants.$D.scrollTop();\n            const stageCSS = {\n                left: this.$stage.css('left'),\n                right: this.$stage.css('right'),\n                top: this.$stage.css('top'),\n                bottom: this.$stage.css('bottom'),\n                borderLeft: this.$stage.css('border-left-width'),\n                borderRight: this.$stage.css('border-right-width'),\n                borderTop: this.$stage.css('border-top-width'),\n                borderBottom: this.$stage.css('border-bottom-width')\n            };\n            const modalWidth = img.width + parseFloat(stageCSS.left) + parseFloat(stageCSS.right) + parseFloat(stageCSS.borderLeft) + parseFloat(stageCSS.borderRight);\n            const modalHeight = img.height + parseFloat(stageCSS.top) + parseFloat(stageCSS.bottom) + parseFloat(stageCSS.borderTop) + parseFloat(stageCSS.borderBottom);\n            const gapThreshold = (this.options.gapThreshold > 0 ? this.options.gapThreshold : 0) + 1;\n            const scale = Math.min(winWidth / (modalWidth * gapThreshold), winHeight / (modalHeight * gapThreshold), 1);\n            let minWidth = Math.max(modalWidth * scale, this.options.modalWidth);\n            let minHeight = Math.max(modalHeight * scale, this.options.modalHeight);\n            minWidth = this.options.fixedModalSize ? this.options.modalWidth : Math.round(minWidth);\n            minHeight = this.options.fixedModalSize ? this.options.modalHeight : Math.round(minHeight);\n            const modalCSSObj = {\n                width: minWidth + 'px',\n                height: minHeight + 'px',\n                left: (winWidth - minWidth) / 2 + scrollLeft + 'px',\n                top: (winHeight - minHeight) / 2 + scrollTop + 'px'\n            };\n            if (this.options.initAnimation) {\n                this.$photoviewer.animate(modalCSSObj, 400, 'ease-in-out', () => {\n                    this.setImageSize(img);\n                });\n            } else {\n                this.$photoviewer.css(modalCSSObj);\n                this.setImageSize(img);\n            }\n            this.isOpened = true;\n        }\n        getImageScaleToStage(stageWidth, stageHeight) {\n            let scale = 1;\n            if (!this.isRotated) {\n                scale = Math.min(stageWidth / this.img.width, stageHeight / this.img.height, 1);\n            } else {\n                scale = Math.min(stageWidth / this.img.height, stageHeight / this.img.width, 1);\n            }\n            return scale;\n        }\n        setImageSize(img) {\n            const stageData = {\n                w: this.$stage.width(),\n                h: this.$stage.height()\n            };\n            const scale = this.getImageScaleToStage(stageData.w, stageData.h);\n            this.$image.css({\n                width: Math.ceil(img.width * scale) + 'px',\n                height: Math.ceil(img.height * scale) + 'px',\n                left: (stageData.w - Math.ceil(img.width * scale)) / 2 + 'px',\n                top: (stageData.h - Math.ceil(img.height * scale)) / 2 + 'px'\n            });\n            $.extend(this.imageData, {\n                initWidth: img.width * scale,\n                initHeight: img.height * scale,\n                initLeft: (stageData.w - img.width * scale) / 2,\n                initTop: (stageData.h - img.height * scale) / 2,\n                width: img.width * scale,\n                height: img.height * scale,\n                left: (stageData.w - img.width * scale) / 2,\n                top: (stageData.h - img.height * scale) / 2\n            });\n            Utilities.setGrabCursor({\n                w: this.$image.width(),\n                h: this.$image.height()\n            }, {\n                w: this.$stage.width(),\n                h: this.$stage.height()\n            }, this.$stage, this.isRotated);\n            if (!this.imageLoaded) {\n                this.$photoviewer.find(Constants.CLASS_NS + '-loader').remove();\n                this.$stage.removeClass('stage-ready');\n                this.$image.removeClass('image-ready');\n                if (this.options.initAnimation && !this.options.progressiveLoading) {\n                    this.$image.fadeIn();\n                }\n                this.imageLoaded = true;\n            }\n        }\n        loadImage(imgSrc, fn, err) {\n            this.$image.removeAttr('style').attr('src', '');\n            this.isRotated = false;\n            this.rotateAngle = 0;\n            this.imageLoaded = false;\n            this.$photoviewer.append(`<div class=\"${ Constants.NS }-loader\"></div>`);\n            this.$stage.addClass('stage-ready');\n            this.$image.addClass('image-ready');\n            if (this.options.initAnimation && !this.options.progressiveLoading) {\n                this.$image.hide();\n            }\n            this.$image.attr('src', imgSrc);\n            Utilities.preloadImage(imgSrc, img => {\n                this.img = img;\n                this.imageData = {\n                    originalWidth: img.width,\n                    originalHeight: img.height\n                };\n                if (this.isMaximized || this.isOpened && this.options.fixedModalPos) {\n                    this.setImageSize(img);\n                } else {\n                    this.setModalSize(img);\n                }\n                if (fn) {\n                    fn.call();\n                }\n            }, () => {\n                this.$photoviewer.find(Constants.CLASS_NS + '-loader').remove();\n                if (err) {\n                    err.call();\n                }\n            });\n            if (this.options.title) {\n                this.setImageTitle(imgSrc);\n            }\n        }\n        setImageTitle(url) {\n            const title = this.groupData[this.groupIndex].title || Utilities.getImageNameFromUrl(url);\n            this.$title.html(title);\n        }\n        jump(step) {\n            this._triggerHook('beforeChange', [\n                this,\n                this.groupIndex\n            ]);\n            this.groupIndex = this.groupIndex + step;\n            this.jumpTo(this.groupIndex);\n        }\n        jumpTo(index) {\n            index = index % this.groupData.length;\n            if (index >= 0) {\n                index = index % this.groupData.length;\n            } else if (index < 0) {\n                index = (this.groupData.length + index) % this.groupData.length;\n            }\n            this.groupIndex = index;\n            this.loadImage(this.groupData[index].src, () => {\n                this._triggerHook('changed', [\n                    this,\n                    index\n                ]);\n            }, () => {\n                this._triggerHook('changed', [\n                    this,\n                    index\n                ]);\n            });\n        }\n        wheel(e) {\n            e.preventDefault();\n            let delta = 1;\n            if (e.deltaY) {\n                delta = e.deltaY > 0 ? 1 : -1;\n            } else if (e.wheelDelta) {\n                delta = -e.wheelDelta / 120;\n            } else if (e.detail) {\n                delta = e.detail > 0 ? 1 : -1;\n            }\n            const ratio = -delta * this.options.ratioThreshold;\n            const pointer = {\n                x: e.clientX - this.$stage.offset().left + Constants.$D.scrollLeft(),\n                y: e.clientY - this.$stage.offset().top + Constants.$D.scrollTop()\n            };\n            this.zoom(ratio, pointer, e);\n        }\n        zoom(ratio, origin, e) {\n            ratio = ratio < 0 ? 1 / (1 - ratio) : 1 + ratio;\n            ratio = this.$image.width() / this.imageData.originalWidth * ratio;\n            if (ratio > this.options.maxRatio || ratio < this.options.minRatio) {\n                return;\n            }\n            this.zoomTo(ratio, origin, e);\n        }\n        zoomTo(ratio, origin, e) {\n            const $image = this.$image;\n            const $stage = this.$stage;\n            const imgData = {\n                w: this.imageData.width,\n                h: this.imageData.height,\n                x: this.imageData.left,\n                y: this.imageData.top\n            };\n            const stageData = {\n                w: $stage.width(),\n                h: $stage.height(),\n                x: $stage.offset().left,\n                y: $stage.offset().top\n            };\n            const newWidth = this.imageData.originalWidth * ratio;\n            const newHeight = this.imageData.originalHeight * ratio;\n            let newLeft = origin.x - (origin.x - imgData.x) / imgData.w * newWidth;\n            let newTop = origin.y - (origin.y - imgData.y) / imgData.h * newHeight;\n            const Î´ = !this.isRotated ? 0 : (newWidth - newHeight) / 2;\n            const imgNewWidth = !this.isRotated ? newWidth : newHeight;\n            const imgNewHeight = !this.isRotated ? newHeight : newWidth;\n            const offsetX = stageData.w - newWidth;\n            const offsetY = stageData.h - newHeight;\n            if (imgNewHeight <= stageData.h) {\n                newTop = (stageData.h - newHeight) / 2;\n            } else {\n                newTop = newTop > Î´ ? Î´ : newTop > offsetY - Î´ ? newTop : offsetY - Î´;\n            }\n            if (imgNewWidth <= stageData.w) {\n                newLeft = (stageData.w - newWidth) / 2;\n            } else {\n                newLeft = newLeft > -Î´ ? -Î´ : newLeft > offsetX + Î´ ? newLeft : offsetX + Î´;\n            }\n            if (Math.abs(this.imageData.initWidth - newWidth) < this.imageData.initWidth * 0.05) {\n                this.setImageSize(this.img);\n            } else {\n                $image.css({\n                    width: Math.round(newWidth) + 'px',\n                    height: Math.round(newHeight) + 'px',\n                    left: Math.round(newLeft) + 'px',\n                    top: Math.round(newTop) + 'px'\n                });\n                Utilities.setGrabCursor({\n                    w: Math.round(imgNewWidth),\n                    h: Math.round(imgNewHeight)\n                }, {\n                    w: stageData.w,\n                    h: stageData.h\n                }, this.$stage);\n            }\n            $.extend(this.imageData, {\n                width: newWidth,\n                height: newHeight,\n                left: newLeft,\n                top: newTop\n            });\n        }\n        rotate(angle) {\n            this.rotateAngle = this.rotateAngle + angle;\n            if (this.rotateAngle / 90 % 2 === 0) {\n                this.isRotated = false;\n            } else {\n                this.isRotated = true;\n            }\n            this.rotateTo(this.rotateAngle);\n        }\n        rotateTo(angle) {\n            this.$image.css({ transform: 'rotate(' + angle + 'deg)' });\n            this.setImageSize({\n                width: this.imageData.originalWidth,\n                height: this.imageData.originalHeight\n            });\n            this.$stage.removeClass('is-grab');\n        }\n        resize() {\n            const resizeHandler = Utilities.throttle(() => {\n                if (this.isOpened) {\n                    if (this.isMaximized) {\n                        this.setImageSize({\n                            width: this.imageData.originalWidth,\n                            height: this.imageData.originalHeight\n                        });\n                    } else {\n                        this.setModalSize({\n                            width: this.imageData.originalWidth,\n                            height: this.imageData.originalHeight\n                        });\n                    }\n                }\n            }, 500);\n            return resizeHandler;\n        }\n        maximize() {\n            this.$photoviewer.get(0).focus();\n            if (!this.isMaximized) {\n                this.modalData = {\n                    width: this.$photoviewer.width(),\n                    height: this.$photoviewer.height(),\n                    left: this.$photoviewer.offset().left,\n                    top: this.$photoviewer.offset().top\n                };\n                this.$photoviewer.addClass(Constants.NS + '-maximize');\n                this.$photoviewer.css({\n                    width: '100%',\n                    height: '100%',\n                    left: 0,\n                    top: 0\n                });\n                this.isMaximized = true;\n            } else {\n                this.$photoviewer.removeClass(Constants.NS + '-maximize');\n                const initModalLeft = (Constants.$W.width() - this.options.modalWidth) / 2 + Constants.$D.scrollLeft();\n                const initModalTop = (Constants.$W.height() - this.options.modalHeight) / 2 + Constants.$D.scrollTop();\n                this.$photoviewer.css({\n                    width: this.modalData.width ? this.modalData.width : this.options.modalWidth,\n                    height: this.modalData.height ? this.modalData.height : this.options.modalHeight,\n                    left: this.modalData.left ? this.modalData.left : initModalLeft,\n                    top: this.modalData.top ? this.modalData.top : initModalTop\n                });\n                this.isMaximized = false;\n            }\n            this.setImageSize({\n                width: this.imageData.originalWidth,\n                height: this.imageData.originalHeight\n            });\n        }\n        fullscreen() {\n            this.$photoviewer.get(0).focus();\n            Utilities.requestFullscreen(this.$photoviewer[0]);\n        }\n        _keydown(e) {\n            if (!this.options.keyboard) {\n                return false;\n            }\n            const keyCode = e.keyCode || e.which || e.charCode;\n            const ctrlKey = e.ctrlKey || e.metaKey;\n            const altKey = e.altKey || e.metaKey;\n            switch (keyCode) {\n            case 37:\n                this.jump(-1);\n                break;\n            case 39:\n                this.jump(1);\n                break;\n            case 187:\n                this.zoom(this.options.ratioThreshold * 3, {\n                    x: this.$stage.width() / 2,\n                    y: this.$stage.height() / 2\n                }, e);\n                break;\n            case 189:\n                this.zoom(-this.options.ratioThreshold * 3, {\n                    x: this.$stage.width() / 2,\n                    y: this.$stage.height() / 2\n                }, e);\n                break;\n            case 61:\n                this.zoom(this.options.ratioThreshold * 3, {\n                    x: this.$stage.width() / 2,\n                    y: this.$stage.height() / 2\n                }, e);\n                break;\n            case 173:\n                this.zoom(-this.options.ratioThreshold * 3, {\n                    x: this.$stage.width() / 2,\n                    y: this.$stage.height() / 2\n                }, e);\n                break;\n            case 48:\n                if (ctrlKey && altKey) {\n                    this.zoomTo(1, {\n                        x: this.$stage.width() / 2,\n                        y: this.$stage.height() / 2\n                    }, e);\n                }\n                break;\n            case 188:\n                if (ctrlKey) {\n                    this.rotate(-90);\n                }\n                break;\n            case 190:\n                if (ctrlKey) {\n                    this.rotate(90);\n                }\n                break;\n            case 81:\n                this.close();\n                break;\n            default:\n            }\n        }\n        _addEvents() {\n            this.$close.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, e => {\n                this.close();\n            });\n            this.$stage.off(Constants.WHEEL_EVENT + Constants.EVENT_NS).on(Constants.WHEEL_EVENT + Constants.EVENT_NS, e => {\n                this.wheel(e);\n            });\n            this.$zoomIn.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, e => {\n                this.zoom(this.options.ratioThreshold * 3, {\n                    x: this.$stage.width() / 2,\n                    y: this.$stage.height() / 2\n                }, e);\n            });\n            this.$zoomOut.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, e => {\n                this.zoom(-this.options.ratioThreshold * 3, {\n                    x: this.$stage.width() / 2,\n                    y: this.$stage.height() / 2\n                }, e);\n            });\n            this.$actualSize.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, e => {\n                this.zoomTo(1, {\n                    x: this.$stage.width() / 2,\n                    y: this.$stage.height() / 2\n                }, e);\n            });\n            this.$prev.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, () => {\n                this.jump(-1);\n            });\n            this.$fullscreen.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, () => {\n                this.fullscreen();\n            });\n            this.$next.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, () => {\n                this.jump(1);\n            });\n            this.$rotateLeft.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, () => {\n                this.rotate(-90);\n            });\n            this.$rotateRight.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, () => {\n                this.rotate(90);\n            });\n            this.$maximize.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, () => {\n                this.maximize();\n            });\n            this.$photoviewer.off(Constants.KEYDOWN_EVENT + Constants.EVENT_NS).on(Constants.KEYDOWN_EVENT + Constants.EVENT_NS, e => {\n                this._keydown(e);\n            });\n            Constants.$W.on(Constants.RESIZE_EVENT + Constants.EVENT_NS, this.resize());\n        }\n        _addCustomButtonEvents() {\n            for (const btnKey in this.options.customButtons) {\n                this.$photoviewer.find(Constants.CLASS_NS + '-button-' + btnKey).off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, e => {\n                    this.options.customButtons[btnKey].click.apply(this, [\n                        this,\n                        e\n                    ]);\n                });\n            }\n        }\n        _triggerHook(e, data) {\n            if (this.options.callbacks[e]) {\n                this.options.callbacks[e].apply(this, $.isArray(data) ? data : [data]);\n            }\n        }\n    }\n    $.extend(PhotoViewer.prototype, draggable, movable, resizable);\n    window.PhotoViewer = PhotoViewer;\n    return PhotoViewer;\n});"]}