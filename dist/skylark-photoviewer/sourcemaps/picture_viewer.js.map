{"version":3,"sources":["picture_viewer.js"],"names":["define","eventer","plugins","Movable","$","Constants","Utilities","Plugin","inherit","klassName","pluginName","options","ratioThreshold","minRatio","maxRatio","movable","_construct","elm","prototype","call","this","$stage","$image","find","off","WHEEL_EVENT","EVENT_NS","on","e","_handleWheel","_movable","starting","hasClass","imageWidth","width","imageHeight","height","stageWidth","stageHeight","minX","minY","maxX","maxY","constraints","started","stop","getImageScaleToStage","scale","isRotated","Math","min","img","setImageSize","stageData","w","h","css","ceil","left","top","extend","imageData","initWidth","initHeight","initLeft","initTop","setGrabCursor","imageLoaded","CLASS_NS","remove","removeClass","initAnimation","progressiveLoading","fadeIn","loadImage","imgSrc","fn","err","removeAttr","attr","rotateAngle","append","NS","addClass","hide","preloadImage","originalWidth","originalHeight","$photoviewer","preventDefault","delta","deltaY","wheelDelta","detail","ratio","pointer","x","clientX","offset","$D","scrollLeft","y","clientY","scrollTop","zoom","origin","zoomTo","imgData","newWidth","newHeight","newLeft","newTop","Î´","imgNewWidth","imgNewHeight","offsetX","offsetY","abs","round","rotate","angle","rotateTo","transform","resize","shortcut","keyCode","ctrlKey","altKey","handled"],"mappings":"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","file":"../picture_viewer.js","sourcesContent":["define([\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-plugins-base\",\r\n    \"skylark-domx-plugins-interact/movable\",\r\n    'skylark-jquery',\r\n    './constants',\r\n    './utilities'\r\n\r\n], function (eventer,plugins,Movable,$,  Constants, Utilities) {\r\n    'use strict';\r\n\r\n    var Imager = plugins.Plugin.inherit({\r\n        klassName : \"Imager\",\r\n\r\n        pluginName : \"lark.domx.imager\",\r\n\r\n        options : {\r\n            ratioThreshold: 0.1,\r\n            minRatio: 0.05,\r\n            maxRatio: 16,\r\n            movable : true\r\n        },\r\n\r\n        _construct : function(elm,options) {\r\n            plugins.Plugin.prototype._construct.call(this,elm,options);\r\n\r\n            this.$stage = this.$();\r\n            this.$image = this.$stage.find(\"img\");\r\n            \r\n\r\n            this.$stage.off(Constants.WHEEL_EVENT + Constants.EVENT_NS).on(Constants.WHEEL_EVENT + Constants.EVENT_NS, e => {\r\n                this._handleWheel(e);\r\n            });\r\n\r\n            if (this.options.movable) {\r\n                this._movable = new Movable(this.$image[0],{\r\n                    starting : (e) => {\r\n                        if (this.$stage.hasClass('is-grab')) {\r\n\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                        const imageWidth = this.$image.width();\r\n                        const imageHeight = this.$image.height();\r\n                        const stageWidth = this.$stage.width();\r\n                        const stageHeight = this.$stage.height();\r\n                        let minX,minY,maxX,maxY;\r\n\r\n                        if (stageWidth>=imageWidth) {\r\n                            minX=maxX=(stageWidth-imageWidth) / 2;\r\n                        } else {\r\n                            minX = stageWidth - imageWidth;\r\n                            maxX = 0;\r\n                        }\r\n\r\n                        if (stageHeight>=imageHeight) {\r\n                            minY=maxY=(stageHeight-imageHeight) / 2;\r\n                        } else {\r\n                            minY = stageHeight - imageHeight;\r\n                            maxY = 0;\r\n                        }\r\n\r\n                        return {\r\n                            constraints : {\r\n                                minX,\r\n                                maxX,\r\n                                minY,\r\n                                maxY\r\n                            }\r\n                        };\r\n                    },\r\n                    started : function(e) {\r\n                        eventer.stop(e);\r\n                    }\r\n                });\r\n            }\r\n\r\n        }, \r\n\r\n        getImageScaleToStage : function(stageWidth, stageHeight) {\r\n            let scale = 1;\r\n            if (!this.isRotated) {\r\n                scale = Math.min(stageWidth / this.img.width, stageHeight / this.img.height, 1);\r\n            } else {\r\n                scale = Math.min(stageWidth / this.img.height, stageHeight / this.img.width, 1);\r\n            }\r\n            return scale;\r\n        },\r\n\r\n        setImageSize: function(img) {\r\n            const stageData = {\r\n                w: this.$stage.width(),\r\n                h: this.$stage.height()\r\n            };\r\n            const scale = this.getImageScaleToStage(stageData.w, stageData.h);\r\n            this.$image.css({\r\n                width: Math.ceil(img.width * scale) + 'px',\r\n                height: Math.ceil(img.height * scale) + 'px',\r\n                left: (stageData.w - Math.ceil(img.width * scale)) / 2 + 'px',\r\n                top: (stageData.h - Math.ceil(img.height * scale)) / 2 + 'px'\r\n            });\r\n            $.extend(this.imageData, {\r\n                initWidth: img.width * scale,\r\n                initHeight: img.height * scale,\r\n                initLeft: (stageData.w - img.width * scale) / 2,\r\n                initTop: (stageData.h - img.height * scale) / 2,\r\n                width: img.width * scale,\r\n                height: img.height * scale,\r\n                left: (stageData.w - img.width * scale) / 2,\r\n                top: (stageData.h - img.height * scale) / 2\r\n            });\r\n            Utilities.setGrabCursor({\r\n                w: this.$image.width(),\r\n                h: this.$image.height()\r\n            }, {\r\n                w: this.$stage.width(),\r\n                h: this.$stage.height()\r\n            }, this.$stage, this.isRotated);\r\n            if (!this.imageLoaded) {\r\n                this.$stage.find(Constants.CLASS_NS + '-loader').remove();\r\n                this.$stage.removeClass('stage-ready');\r\n                this.$image.removeClass('image-ready');\r\n                if (this.options.initAnimation && !this.options.progressiveLoading) {\r\n                    this.$image.fadeIn();\r\n                }\r\n                this.imageLoaded = true;\r\n            }\r\n        },\r\n\r\n        loadImage : function(imgSrc, fn, err) {\r\n            this.$image.removeAttr('style').attr('src', '');\r\n            this.isRotated = false;\r\n            this.rotateAngle = 0;\r\n            this.imageLoaded = false;\r\n            this.$stage.append(`<div class=\"${ Constants.NS }-loader\"></div>`);\r\n            this.$stage.addClass('stage-ready');\r\n            this.$image.addClass('image-ready');\r\n            if (this.options.initAnimation && !this.options.progressiveLoading) {\r\n                this.$image.hide();\r\n            }\r\n            this.$image.attr('src', imgSrc);\r\n            Utilities.preloadImage(imgSrc, img => {\r\n                this.img = img;\r\n                this.imageData = {\r\n                    originalWidth: img.width,\r\n                    originalHeight: img.height\r\n                };\r\n                ///if (this.isMaximized || this.isOpened && this.options.fixedModalPos) {\r\n                ///    this.setImageSize(img);\r\n                ///} else {\r\n                ///    this.setModalSize(img);\r\n                ///}\r\n                if (fn) {\r\n                    fn(img);\r\n                }\r\n            }, () => {\r\n                this.$photoviewer.find(Constants.CLASS_NS + '-loader').remove();\r\n                if (err) {\r\n                    err.call();\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        _handleWheel : function(e) {\r\n            e.preventDefault();\r\n            let delta = 1;\r\n            if (e.deltaY) {\r\n                delta = e.deltaY > 0 ? 1 : -1;\r\n            } else if (e.wheelDelta) {\r\n                delta = -e.wheelDelta / 120;\r\n            } else if (e.detail) {\r\n                delta = e.detail > 0 ? 1 : -1;\r\n            }\r\n            const ratio = -delta * this.options.ratioThreshold;\r\n            const pointer = {\r\n                x: e.clientX - this.$stage.offset().left + Constants.$D.scrollLeft(),\r\n                y: e.clientY - this.$stage.offset().top + Constants.$D.scrollTop()\r\n            };\r\n            this.zoom(ratio, pointer, e);\r\n        },\r\n\r\n        zoom : function(ratio, origin, e) {\r\n            ratio = ratio < 0 ? 1 / (1 - ratio) : 1 + ratio;\r\n            ratio = this.$image.width() / this.imageData.originalWidth * ratio;\r\n            if (ratio > this.options.maxRatio || ratio < this.options.minRatio) {\r\n                return;\r\n            }\r\n            this.zoomTo(ratio, origin, e);\r\n        },\r\n\r\n        zoomTo : function(ratio, origin, e) {\r\n            const $image = this.$image;\r\n            const $stage = this.$stage;\r\n            const imgData = {\r\n                w: this.imageData.width,\r\n                h: this.imageData.height,\r\n                x: this.imageData.left,\r\n                y: this.imageData.top\r\n            };\r\n            const stageData = {\r\n                w: $stage.width(),\r\n                h: $stage.height(),\r\n                x: $stage.offset().left,\r\n                y: $stage.offset().top\r\n            };\r\n            const newWidth = this.imageData.originalWidth * ratio;\r\n            const newHeight = this.imageData.originalHeight * ratio;\r\n            let newLeft = origin.x - (origin.x - imgData.x) / imgData.w * newWidth;\r\n            let newTop = origin.y - (origin.y - imgData.y) / imgData.h * newHeight;\r\n            const Î´ = !this.isRotated ? 0 : (newWidth - newHeight) / 2;\r\n            const imgNewWidth = !this.isRotated ? newWidth : newHeight;\r\n            const imgNewHeight = !this.isRotated ? newHeight : newWidth;\r\n            const offsetX = stageData.w - newWidth;\r\n            const offsetY = stageData.h - newHeight;\r\n            if (imgNewHeight <= stageData.h) {\r\n                newTop = (stageData.h - newHeight) / 2;\r\n            } else {\r\n                newTop = newTop > Î´ ? Î´ : newTop > offsetY - Î´ ? newTop : offsetY - Î´;\r\n            }\r\n            if (imgNewWidth <= stageData.w) {\r\n                newLeft = (stageData.w - newWidth) / 2;\r\n            } else {\r\n                newLeft = newLeft > -Î´ ? -Î´ : newLeft > offsetX + Î´ ? newLeft : offsetX + Î´;\r\n            }\r\n            if (Math.abs(this.imageData.initWidth - newWidth) < this.imageData.initWidth * 0.05) {\r\n                this.setImageSize(this.img);\r\n            } else {\r\n                $image.css({\r\n                    width: Math.round(newWidth) + 'px',\r\n                    height: Math.round(newHeight) + 'px',\r\n                    left: Math.round(newLeft) + 'px',\r\n                    top: Math.round(newTop) + 'px'\r\n                });\r\n                Utilities.setGrabCursor({\r\n                    w: Math.round(imgNewWidth),\r\n                    h: Math.round(imgNewHeight)\r\n                }, {\r\n                    w: stageData.w,\r\n                    h: stageData.h\r\n                }, this.$stage);\r\n            }\r\n            $.extend(this.imageData, {\r\n                width: newWidth,\r\n                height: newHeight,\r\n                left: newLeft,\r\n                top: newTop\r\n            });\r\n        },\r\n\r\n        rotate : function(angle) {\r\n            this.rotateAngle = this.rotateAngle + angle;\r\n            if (this.rotateAngle / 90 % 2 === 0) {\r\n                this.isRotated = false;\r\n            } else {\r\n                this.isRotated = true;\r\n            }\r\n            this.rotateTo(this.rotateAngle);\r\n        },\r\n        rotateTo: function(angle) {\r\n            this.$image.css({ transform: 'rotate(' + angle + 'deg)' });\r\n            this.setImageSize({\r\n                width: this.imageData.originalWidth,\r\n                height: this.imageData.originalHeight\r\n            });\r\n            this.$stage.removeClass('is-grab');\r\n        },\r\n        resize: function() {\r\n            const imageWidth = this.$image.width();\r\n            const imageHeight = this.$image.height();\r\n            const stageWidth = this.$stage.width();\r\n            const stageHeight = this.$stage.height();\r\n            const left = (stageWidth - imageWidth) /2;\r\n            const top = (stageHeight- imageHeight) /2;\r\n            this.$image.css({\r\n                left,\r\n                top\r\n            });\r\n        },\r\n\r\n        shortcut: function(keyCode,ctrlKey,altKey) {\r\n            var handled = false;\r\n            switch (keyCode) {\r\n                // +\r\n                case 187:\r\n                    this.zoom(this.options.ratioThreshold * 3, {\r\n                        x: this.$stage.width() / 2,\r\n                        y: this.$stage.height() / 2\r\n                    }, e);\r\n                    handled = true;\r\n                    break;\r\n                // -\r\n                case 189:\r\n                    this.zoom(-this.options.ratioThreshold * 3, {\r\n                        x: this.$stage.width() / 2,\r\n                        y: this.$stage.height() / 2\r\n                    }, e);\r\n                    handled = true;\r\n                    break;\r\n                // + Firefox\r\n                case 61:\r\n                    this.zoom(this.options.ratioThreshold * 3, {\r\n                        x: this.$stage.width() / 2,\r\n                        y: this.$stage.height() / 2\r\n                    }, e);\r\n                    handled = true;\r\n                    break;\r\n                // - Firefox\r\n                case 173:\r\n                    this.zoom(-this.options.ratioThreshold * 3, {\r\n                        x: this.$stage.width() / 2,\r\n                        y: this.$stage.height() / 2\r\n                    }, e);\r\n                    handled = true;\r\n                    break;\r\n                // Ctrl + Alt + 0\r\n                case 48:\r\n                    if (ctrlKey && altKey) {\r\n                        this.zoomTo(1, {\r\n                            x: this.$stage.width() / 2,\r\n                            y: this.$stage.height() / 2\r\n                        }, e);\r\n                    }\r\n                    handled = true;\r\n                    break;\r\n                // Ctrl + ,\r\n                case 188:\r\n                    if (ctrlKey) {\r\n                        this.rotate(-90);\r\n                    }\r\n                    break;\r\n                // Ctrl + .\r\n                case 190:\r\n                    if (ctrlKey) {\r\n                        this.rotate(90);\r\n                    }\r\n                    handled = true;\r\n                    break;\r\n                default:\r\n            }\r\n\r\n            return handled;\r\n        }\r\n    });\r\n\r\n    return Imager;\r\n});"]}