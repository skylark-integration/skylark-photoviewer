{"version":3,"sources":["draggable.js"],"names":["define","$","Constants","[object Object]","modal","dragHandle","dragCancel","isDragging","startX","startY","left","top","dragMove","e","window","event","preventDefault","PUBLIC_VARS","this","isMaximized","endX","type","targetTouches","pageX","clientX","endY","pageY","clientY","relativeX","relativeY","css","dragEnd","$D","off","TOUCH_MOVE_EVENT","EVENT_NS","TOUCH_END_EVENT","on","TOUCH_START_EVENT","get","focus","target","closest","length","options","multiInstances","offset"],"mappings":";;;;;;;AAAAA,QACI,SACA,eACD,SAAUC,EAAGC,GACZ,aACA,OACIC,UAAUC,EAAOC,EAAYC,GACzB,IAAIC,GAAa,EACbC,EAAS,EACTC,EAAS,EACTC,EAAO,EACPC,EAAM,EACV,MAiBMC,EAAWC,IAGb,IAFAA,EAAIA,GAAKC,OAAOC,OACdC,iBACET,IAAeL,EAAUe,YAAsB,WAAMf,EAAUe,YAAwB,aAAMC,KAAKC,YAAa,CAC/G,MAAMC,EAAkB,cAAXP,EAAEQ,KAAuBR,EAAES,cAAc,GAAGC,MAAQV,EAAEW,QAC7DC,EAAkB,cAAXZ,EAAEQ,KAAuBR,EAAES,cAAc,GAAGI,MAAQb,EAAEc,QAC7DC,EAAYR,EAAOZ,EACnBqB,EAAYJ,EAAOhB,EACzBR,EAAEG,GAAO0B,KACLpB,KAAMkB,EAAYlB,EAAO,KACzBC,IAAKkB,EAAYlB,EAAM,SAI7BoB,EAAU,KACZ7B,EAAU8B,GAAGC,IAAI/B,EAAUgC,iBAAmBhC,EAAUiC,SAAUvB,GAAUqB,IAAI/B,EAAUkC,gBAAkBlC,EAAUiC,SAAUJ,GAChIxB,GAAa,GAEjBN,EAAEI,GAAYgC,GAAGnC,EAAUoC,kBAAoBpC,EAAUiC,SAnCvCtB,IAId,GAHAA,EAAIA,GAAKC,OAAOC,MAChBX,EAAMmC,IAAI,GAAGC,QACMvC,EAAEY,EAAE4B,QAAQC,QAAQpC,GACxBqC,OACX,OAAO,EAEPzB,KAAK0B,QAAQC,gBACbzC,EAAM0B,IAAI,YAAa5B,EAAUe,YAAoB,QAEzDV,GAAa,EACbC,EAAoB,eAAXK,EAAEQ,KAAwBR,EAAES,cAAc,GAAGC,MAAQV,EAAEW,QAChEf,EAAoB,eAAXI,EAAEQ,KAAwBR,EAAES,cAAc,GAAGI,MAAQb,EAAEc,QAChEjB,EAAOT,EAAEG,GAAO0C,SAASpC,KACzBC,EAAMV,EAAEG,GAAO0C,SAASnC,IACxBT,EAAU8B,GAAGK,GAAGnC,EAAUgC,iBAAmBhC,EAAUiC,SAAUvB,GAAUyB,GAAGnC,EAAUkC,gBAAkBlC,EAAUiC,SAAUJ","file":"../draggable.js","sourcesContent":["define([\n    './domq',\n    './constants'\n], function ($, Constants) {\n    'use strict';\n    return {\n        draggable(modal, dragHandle, dragCancel) {\n            let isDragging = false;\n            let startX = 0;\n            let startY = 0;\n            let left = 0;\n            let top = 0;\n            const dragStart = e => {\n                e = e || window.event;\n                modal.get(0).focus();\n                const elemCancel = $(e.target).closest(dragCancel);\n                if (elemCancel.length) {\n                    return true;\n                }\n                if (this.options.multiInstances) {\n                    modal.css('z-index', ++Constants.PUBLIC_VARS['zIndex']);\n                }\n                isDragging = true;\n                startX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.clientX;\n                startY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.clientY;\n                left = $(modal).offset().left;\n                top = $(modal).offset().top;\n                Constants.$D.on(Constants.TOUCH_MOVE_EVENT + Constants.EVENT_NS, dragMove).on(Constants.TOUCH_END_EVENT + Constants.EVENT_NS, dragEnd);\n            };\n            const dragMove = e => {\n                e = e || window.event;\n                e.preventDefault();\n                if (isDragging && !Constants.PUBLIC_VARS['isMoving'] && !Constants.PUBLIC_VARS['isResizing'] && !this.isMaximized) {\n                    const endX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.clientX;\n                    const endY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.clientY;\n                    const relativeX = endX - startX;\n                    const relativeY = endY - startY;\n                    $(modal).css({\n                        left: relativeX + left + 'px',\n                        top: relativeY + top + 'px'\n                    });\n                }\n            };\n            const dragEnd = () => {\n                Constants.$D.off(Constants.TOUCH_MOVE_EVENT + Constants.EVENT_NS, dragMove).off(Constants.TOUCH_END_EVENT + Constants.EVENT_NS, dragEnd);\n                isDragging = false;\n            };\n            $(dragHandle).on(Constants.TOUCH_START_EVENT + Constants.EVENT_NS, dragStart);\n        }\n    };\n});"]}