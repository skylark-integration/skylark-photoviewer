{"version":3,"sources":["resizable.js"],"names":["define","$","Constants","Utilities","ELEMS_WITH_RESIZE_CURSOR","NS","[object Object]","modal","stage","image","minWidth","minHeight","resizableHandleE","resizableHandleW","resizableHandleS","resizableHandleN","resizableHandleSE","resizableHandleSW","resizableHandleNE","resizableHandleNW","resizableHandles","e","s","se","n","w","nw","ne","sw","append","isDragging","startX","startY","modalData","h","l","t","stageData","imageData","δ","imgWidth","imgHeight","direction","dragStart","dir","window","event","preventDefault","PUBLIC_VARS","type","targetTouches","pageX","clientX","pageY","clientY","width","height","offset","left","top","position","this","isRotated","css","$D","on","TOUCH_MOVE_EVENT","EVENT_NS","dragMove","TOUCH_END_EVENT","dragEnd","isMaximized","endX","endY","relativeX","relativeY","modalOpts","offsetX","offsetY","modalLeft","modalTop","Math","max","getModalOpts","imageOpts","widthDiff","heightDiff","widthDiff2","heightDiff2","imgLeft","imgTop","imgLeft2","imgTop2","getImageOpts","isDoResize","off","setGrabCursor","scale","getImageScaleToStage","extend","initWidth","img","initHeight","initLeft","initTop","each","handle","TOUCH_START_EVENT"],"mappings":"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","file":"../resizable.js","sourcesContent":["define([\n    './domq',\n    './constants',\n    './utilities'\n], function ($, Constants, Utilities) {\n    'use strict';\n    const ELEMS_WITH_RESIZE_CURSOR = `html, body, .${ Constants.NS }-modal, .${ Constants.NS }-stage, .${ Constants.NS }-button`;\n    return {\n        resizable(modal, stage, image, minWidth, minHeight) {\n            const resizableHandleE = $(`<div class=\"${ Constants.NS }-resizable-handle ${ Constants.NS }-resizable-handle-e\"></div>`);\n            const resizableHandleW = $(`<div class=\"${ Constants.NS }-resizable-handle ${ Constants.NS }-resizable-handle-w\"></div>`);\n            const resizableHandleS = $(`<div class=\"${ Constants.NS }-resizable-handle ${ Constants.NS }-resizable-handle-s\"></div>`);\n            const resizableHandleN = $(`<div class=\"${ Constants.NS }-resizable-handle ${ Constants.NS }-resizable-handle-n\"></div>`);\n            const resizableHandleSE = $(`<div class=\"${ Constants.NS }-resizable-handle ${ Constants.NS }-resizable-handle-se\"></div>`);\n            const resizableHandleSW = $(`<div class=\"${ Constants.NS }-resizable-handle ${ Constants.NS }-resizable-handle-sw\"></div>`);\n            const resizableHandleNE = $(`<div class=\"${ Constants.NS }-resizable-handle ${ Constants.NS }-resizable-handle-ne\"></div>`);\n            const resizableHandleNW = $(`<div class=\"${ Constants.NS }-resizable-handle ${ Constants.NS }-resizable-handle-nw\"></div>`);\n            const resizableHandles = {\n                e: resizableHandleE,\n                s: resizableHandleS,\n                se: resizableHandleSE,\n                n: resizableHandleN,\n                w: resizableHandleW,\n                nw: resizableHandleNW,\n                ne: resizableHandleNE,\n                sw: resizableHandleSW\n            };\n            $(modal).append(resizableHandleE, resizableHandleW, resizableHandleS, resizableHandleN, resizableHandleSE, resizableHandleSW, resizableHandleNE, resizableHandleNW);\n            let isDragging = false;\n            let startX = 0;\n            let startY = 0;\n            let modalData = {\n                w: 0,\n                h: 0,\n                l: 0,\n                t: 0\n            };\n            let stageData = {\n                w: 0,\n                h: 0,\n                l: 0,\n                t: 0\n            };\n            let imageData = {\n                w: 0,\n                h: 0,\n                l: 0,\n                t: 0\n            };\n            let δ = 0;\n            let imgWidth = 0;\n            let imgHeight = 0;\n            let direction = '';\n            const getModalOpts = function (dir, offsetX, offsetY) {\n                const modalLeft = -offsetX + modalData.w > minWidth ? offsetX + modalData.l : modalData.l + modalData.w - minWidth;\n                const modalTop = -offsetY + modalData.h > minHeight ? offsetY + modalData.t : modalData.t + modalData.h - minHeight;\n                const opts = {\n                    e: { width: Math.max(offsetX + modalData.w, minWidth) + 'px' },\n                    s: { height: Math.max(offsetY + modalData.h, minHeight) + 'px' },\n                    se: {\n                        width: Math.max(offsetX + modalData.w, minWidth) + 'px',\n                        height: Math.max(offsetY + modalData.h, minHeight) + 'px'\n                    },\n                    w: {\n                        width: Math.max(-offsetX + modalData.w, minWidth) + 'px',\n                        left: modalLeft + 'px'\n                    },\n                    n: {\n                        height: Math.max(-offsetY + modalData.h, minHeight) + 'px',\n                        top: modalTop + 'px'\n                    },\n                    nw: {\n                        width: Math.max(-offsetX + modalData.w, minWidth) + 'px',\n                        height: Math.max(-offsetY + modalData.h, minHeight) + 'px',\n                        top: modalTop + 'px',\n                        left: modalLeft + 'px'\n                    },\n                    ne: {\n                        width: Math.max(offsetX + modalData.w, minWidth) + 'px',\n                        height: Math.max(-offsetY + modalData.h, minHeight) + 'px',\n                        top: modalTop + 'px'\n                    },\n                    sw: {\n                        width: Math.max(-offsetX + modalData.w, minWidth) + 'px',\n                        height: Math.max(offsetY + modalData.h, minHeight) + 'px',\n                        left: modalLeft + 'px'\n                    }\n                };\n                return opts[dir];\n            };\n            const getImageOpts = function (dir, offsetX, offsetY) {\n                const widthDiff = offsetX + modalData.w > minWidth ? stageData.w - imgWidth + offsetX - δ : minWidth - (modalData.w - stageData.w) - imgWidth - δ;\n                const heightDiff = offsetY + modalData.h > minHeight ? stageData.h - imgHeight + offsetY + δ : minHeight - (modalData.h - stageData.h) - imgHeight + δ;\n                const widthDiff2 = -offsetX + modalData.w > minWidth ? stageData.w - imgWidth - offsetX - δ : minWidth - (modalData.w - stageData.w) - imgWidth - δ;\n                const heightDiff2 = -offsetY + modalData.h > minHeight ? stageData.h - imgHeight - offsetY + δ : minHeight - (modalData.h - stageData.h) - imgHeight + δ;\n                const imgLeft = (widthDiff > 0 ? $(image).position().left : $(image).position().left < 0 ? $(image).position().left : 0) - δ;\n                const imgTop = (heightDiff > 0 ? $(image).position().top : $(image).position().top < 0 ? $(image).position().top : 0) + δ;\n                const imgLeft2 = (widthDiff2 > 0 ? $(image).position().left : $(image).position().left < 0 ? $(image).position().left : 0) - δ;\n                const imgTop2 = (heightDiff2 > 0 ? $(image).position().top : $(image).position().top < 0 ? $(image).position().top : 0) + δ;\n                const opts = {\n                    e: { left: widthDiff >= -δ ? (widthDiff - δ) / 2 + 'px' : imgLeft > widthDiff ? imgLeft + 'px' : widthDiff + 'px' },\n                    s: { top: heightDiff >= δ ? (heightDiff + δ) / 2 + 'px' : imgTop > heightDiff ? imgTop + 'px' : heightDiff + 'px' },\n                    se: {\n                        top: heightDiff >= δ ? (heightDiff + δ) / 2 + 'px' : imgTop > heightDiff ? imgTop + 'px' : heightDiff + 'px',\n                        left: widthDiff >= -δ ? (widthDiff - δ) / 2 + 'px' : imgLeft > widthDiff ? imgLeft + 'px' : widthDiff + 'px'\n                    },\n                    w: { left: widthDiff2 >= -δ ? (widthDiff2 - δ) / 2 + 'px' : imgLeft2 > widthDiff2 ? imgLeft2 + 'px' : widthDiff2 + 'px' },\n                    n: { top: heightDiff2 >= δ ? (heightDiff2 + δ) / 2 + 'px' : imgTop2 > heightDiff2 ? imgTop2 + 'px' : heightDiff2 + 'px' },\n                    nw: {\n                        top: heightDiff2 >= δ ? (heightDiff2 + δ) / 2 + 'px' : imgTop2 > heightDiff2 ? imgTop2 + 'px' : heightDiff2 + 'px',\n                        left: widthDiff2 >= -δ ? (widthDiff2 - δ) / 2 + 'px' : imgLeft2 > widthDiff2 ? imgLeft2 + 'px' : widthDiff2 + 'px'\n                    },\n                    ne: {\n                        top: heightDiff2 >= δ ? (heightDiff2 + δ) / 2 + 'px' : imgTop2 > heightDiff2 ? imgTop2 + 'px' : heightDiff2 + 'px',\n                        left: widthDiff >= -δ ? (widthDiff - δ) / 2 + 'px' : imgLeft > widthDiff ? imgLeft + 'px' : widthDiff + 'px'\n                    },\n                    sw: {\n                        top: heightDiff >= δ ? (heightDiff + δ) / 2 + 'px' : imgTop > heightDiff ? imgTop + 'px' : heightDiff + 'px',\n                        left: widthDiff2 >= -δ ? (widthDiff2 - δ) / 2 + 'px' : imgLeft2 > widthDiff2 ? imgLeft2 + 'px' : widthDiff2 + 'px'\n                    }\n                };\n                return opts[dir];\n            };\n            const dragStart = (dir, e) => {\n                e = e || window.event;\n                e.preventDefault();\n                isDragging = true;\n                Constants.PUBLIC_VARS['isResizing'] = true;\n                startX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.clientX;\n                startY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.clientY;\n                modalData = {\n                    w: $(modal).width(),\n                    h: $(modal).height(),\n                    l: $(modal).offset().left,\n                    t: $(modal).offset().top\n                };\n                stageData = {\n                    w: $(stage).width(),\n                    h: $(stage).height(),\n                    l: $(stage).offset().left,\n                    t: $(stage).offset().top\n                };\n                imageData = {\n                    w: $(image).width(),\n                    h: $(image).height(),\n                    l: $(image).position().left,\n                    t: $(image).position().top\n                };\n                δ = !this.isRotated ? 0 : (imageData.w - imageData.h) / 2;\n                imgWidth = !this.isRotated ? imageData.w : imageData.h;\n                imgHeight = !this.isRotated ? imageData.h : imageData.w;\n                direction = dir;\n                $(ELEMS_WITH_RESIZE_CURSOR).css('cursor', dir + '-resize');\n                Constants.$D.on(Constants.TOUCH_MOVE_EVENT + Constants.EVENT_NS, dragMove).on(Constants.TOUCH_END_EVENT + Constants.EVENT_NS, dragEnd);\n            };\n            const dragMove = e => {\n                e = e || window.event;\n                e.preventDefault();\n                if (isDragging && !this.isMaximized) {\n                    const endX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.clientX;\n                    const endY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.clientY;\n                    const relativeX = endX - startX;\n                    const relativeY = endY - startY;\n                    const modalOpts = getModalOpts(direction, relativeX, relativeY);\n                    $(modal).css(modalOpts);\n                    const imageOpts = getImageOpts(direction, relativeX, relativeY);\n                    $(image).css(imageOpts);\n                    this.isDoResize = true;\n                }\n            };\n            const dragEnd = () => {\n                Constants.$D.off(Constants.TOUCH_MOVE_EVENT + Constants.EVENT_NS, dragMove).off(Constants.TOUCH_END_EVENT + Constants.EVENT_NS, dragEnd);\n                if (Constants.PUBLIC_VARS['isResizing']) {\n                    Utilities.setGrabCursor({\n                        w: imgWidth,\n                        h: imgHeight\n                    }, {\n                        w: $(stage).width(),\n                        h: $(stage).height()\n                    }, stage);\n                }\n                isDragging = false;\n                Constants.PUBLIC_VARS['isResizing'] = false;\n                $(ELEMS_WITH_RESIZE_CURSOR).css('cursor', '');\n                const scale = this.getImageScaleToStage($(stage).width(), $(stage).height());\n                $.extend(this.imageData, {\n                    initWidth: this.img.width * scale,\n                    initHeight: this.img.height * scale,\n                    initLeft: ($(stage).width() - this.img.width * scale) / 2,\n                    initTop: ($(stage).height() - this.img.height * scale) / 2\n                });\n            };\n            $.each(resizableHandles, function (dir, handle) {\n                handle.on(Constants.TOUCH_START_EVENT + Constants.EVENT_NS, function (e) {\n                    dragStart(dir, e);\n                });\n            });\n        }\n    };\n});"]}