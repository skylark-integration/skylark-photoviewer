{"version":3,"sources":["window.js"],"names":["define","eventer","plugins","$","Movable","Resizable","Constants","Utilities","Plugin","inherit","klassName","pluginName","options","selectors","headerPane","contentPane","footerPane","titlebar","buttons","fullscreen","maximize","minimize","close","fixedContent","initMaximized","movable","dragHandle","resizable","minWidth","minHeight","_construct","elm","prototype","call","this","isOpened","isMaximized","$photoviewer","_elm","_velm","elmx","_movable","handle","starting","e","dragCancel","CLASS_NS","target","closest","length","PUBLIC_VARS","_resizable","border","directions","top","left","right","bottom","topLeft","topRight","bottomLeft","bottomRight","classes","all","NS","constraints","started","moving","stopped","$close","$maximize","$minimize","$fullscreen","off","CLICK_EVENT","EVENT_NS","on","KEYDOWN_EVENT","_keydown","$W","RESIZE_EVENT","resized","trigger","remove","css","overflow","padding-right","multiInstances","zIndex","get","focus","removeClass","initModalLeft","width","modalWidth","$D","scrollLeft","initModalTop","height","modalHeight","scrollTop","modalData","offset","addClass","requestFullscreen","keyboard","keyCode","which","charCode","ctrlKey","metaKey","altKey"],"mappings":";;;;;;;AAAAA,QACI,uBACA,4BACA,iBACA,wCACA,0CACA,cACA,eAED,SAAUC,EAAQC,EAAQC,EAAIC,EAASC,EAAWC,EAAWC,GAC5D,aA2NA,OAzNaL,EAAQM,OAAOC,SACxBC,UAAY,SAEZC,WAAa,mBAEbC,SACIC,WACIC,WAAc,GACdC,YAAc,GACdC,WAAc,GACdC,SAAW,GACXC,SACIC,WAAe,iCACfC,SAAa,+BACbC,SAAa,+BACbC,MAAU,8BAIlBC,cAAc,EACdC,eAAe,EAKfC,SACIC,YAAY,GAEhBC,WACIC,SAAU,IACVC,UAAW,MAInBC,WAAa,SAASC,EAAInB,GACtBV,EAAQM,OAAOwB,UAAUF,WAAWG,KAAKC,KAAKH,EAAInB,GAClDsB,KAAKC,UAAW,EAChBD,KAAKE,aAAc,EAEnBF,KAAKG,aAAelC,EAAE+B,KAAKI,MAE3BJ,KAAKK,MAAQL,KAAKM,OAEdN,KAAKtB,QAAQa,UACbS,KAAKO,SAAW,IAAIrC,EAAQ2B,GACxBW,OAASR,KAAKtB,QAAQa,QAAQC,WAC9BiB,SAAYC,IACR,MAAQC,EAAavC,EAAUwC,SAAW,UAE1C,OADqB3C,EAAEyC,EAAEG,QAAQC,QAAQH,GAC1BI,UAGX3C,EAAU4C,YAAwB,aAAKhB,KAAKE,iBAUxDF,KAAKtB,QAAQe,YAEbO,KAAKiB,WAAa,IAAI9C,EAAU0B,GAC5BW,QACIU,QACIC,YACIC,KAAK,EACLC,MAAM,EACNC,OAAO,EACPC,QAAQ,EACRC,SAAU,EACVC,UAAW,EACXC,YAAa,EACbC,aAAc,GAElBC,SACIC,OAAUzD,EAAU0D,sBACpBV,OAAUhD,EAAU0D,wBACpBT,QAAUjD,EAAU0D,wBACpBR,SAAWlD,EAAU0D,wBACrBP,UAAYnD,EAAU0D,wBACtBN,WAAcpD,EAAU0D,yBACxBL,YAAerD,EAAU0D,yBACzBJ,cAAiBtD,EAAU0D,yBAC3BH,eAAkBvD,EAAU0D,4BAIxCC,aACIrC,SAAWM,KAAKtB,QAAQe,UAAUC,SAClCC,UAAYK,KAAKtB,QAAQe,UAAUE,WAEvCqC,QAAU,WACN5D,EAAU4C,YAAwB,YAAI,GAE1CiB,OAAS,SAASvB,KAclBwB,QAAS,WACL9D,EAAU4C,YAAwB,YAAI,MAMlDhB,KAAKmC,OAASnC,KAAKK,MAAMpC,EAAE+B,KAAKtB,QAAQC,UAAUK,QAAQI,OAC1DY,KAAKoC,UAAYpC,KAAKK,MAAMpC,EAAE+B,KAAKtB,QAAQC,UAAUK,QAAQE,UAC7Dc,KAAKqC,UAAYrC,KAAKK,MAAMpC,EAAE+B,KAAKtB,QAAQC,UAAUK,QAAQG,UAC7Da,KAAKsC,YAActC,KAAKK,MAAMpC,EAAE+B,KAAKtB,QAAQC,UAAUK,QAAQC,YAG/De,KAAKmC,OAAOI,IAAInE,EAAUoE,YAAcpE,EAAUqE,UAAUC,GAAGtE,EAAUoE,YAAcpE,EAAUqE,SAAU/B,IACvGV,KAAKZ,UAETY,KAAKsC,YAAYC,IAAInE,EAAUoE,YAAcpE,EAAUqE,UAAUC,GAAGtE,EAAUoE,YAAcpE,EAAUqE,SAAU,KAC5GzC,KAAKf,eAETe,KAAKoC,UAAUG,IAAInE,EAAUoE,YAAcpE,EAAUqE,UAAUC,GAAGtE,EAAUoE,YAAcpE,EAAUqE,SAAU,KAC1GzC,KAAKd,aAETc,KAAKG,aAAaoC,IAAInE,EAAUuE,cAAgBvE,EAAUqE,UAAUC,GAAGtE,EAAUuE,cAAgBvE,EAAUqE,SAAU/B,IACjHV,KAAK4C,SAASlC,KAElBtC,EAAUyE,GAAGH,GAAGtE,EAAU0E,aAAe1E,EAAUqE,SAAU,KAC7C1E,EAAQgF,QAAQ/C,KAAKI,SAGzChB,MAAO,WACHY,KAAKgD,QAAQ,UAAWhD,MACxBA,KAAKG,aAAa8C,SAClBjD,KAAKC,UAAW,EAChBD,KAAKE,aAAc,EAEdjC,EAAEG,EAAUwC,SAAW,UAAUG,SAC9Bf,KAAKtB,QAAQW,cACbpB,EAAE,QAAQiF,KACNC,SAAU,GACVC,gBAAiB,KAGrBpD,KAAKtB,QAAQ2E,iBACbjF,EAAU4C,YAAoB,OAAIhB,KAAKtB,QAAQ4E,QAEnDlF,EAAUyE,GAAGN,IAAInE,EAAU0E,aAAe1E,EAAUqE,WAExDzC,KAAKgD,QAAQ,SAAUhD,OAG3Bd,SAAU,WAEN,GADAc,KAAKG,aAAaoD,IAAI,GAAGC,QACpBxD,KAAKE,YAeH,CACHF,KAAKG,aAAasD,YAAYrF,EAAU0D,GAAK,aAC7C,MAAM4B,GAAiBtF,EAAUyE,GAAGc,QAAU3D,KAAKtB,QAAQkF,YAAc,EAAIxF,EAAUyF,GAAGC,aACpFC,GAAgB3F,EAAUyE,GAAGmB,SAAWhE,KAAKtB,QAAQuF,aAAe,EAAI7F,EAAUyF,GAAGK,YAC3FlE,KAAKG,aAAa+C,KACdS,MAAO3D,KAAKmE,UAAUR,MAAQ3D,KAAKmE,UAAUR,MAAQ3D,KAAKtB,QAAQkF,WAClEI,OAAQhE,KAAKmE,UAAUH,OAAShE,KAAKmE,UAAUH,OAAShE,KAAKtB,QAAQuF,YACrE5C,KAAMrB,KAAKmE,UAAU9C,KAAOrB,KAAKmE,UAAU9C,KAAOqC,EAClDtC,IAAKpB,KAAKmE,UAAU/C,IAAMpB,KAAKmE,UAAU/C,IAAM2C,IAEnD/D,KAAKE,aAAc,OAxBnBF,KAAKmE,WACDR,MAAO3D,KAAKG,aAAawD,QACzBK,OAAQhE,KAAKG,aAAa6D,SAC1B3C,KAAMrB,KAAKG,aAAaiE,SAAS/C,KACjCD,IAAKpB,KAAKG,aAAaiE,SAAShD,KAEpCpB,KAAKG,aAAakE,SAASjG,EAAU0D,GAAK,aAC1C9B,KAAKG,aAAa+C,KACdS,MAAO,OACPK,OAAQ,OACR3C,KAAM,EACND,IAAK,IAETpB,KAAKE,aAAc,EAcvBnC,EAAQgF,QAAQ/C,KAAKI,OAEzBnB,WAAY,WACRe,KAAKG,aAAaoD,IAAI,GAAGC,QACzBnF,EAAUiG,kBAAkBtE,KAAKG,aAAa,KAElDyC,SAAU,SAASlC,GACf,IAAKV,KAAKtB,QAAQ6F,SACd,OAAO,EAEX,MAAMC,EAAU9D,EAAE8D,SAAW9D,EAAE+D,OAAS/D,EAAEgE,SAC1BhE,EAAEiE,SAAWjE,EAAEkE,QAChBlE,EAAEmE,QAAUnE,EAAEkE,QAC7B,OAAQJ,GAGJ,KAAK,GACDxE,KAAKZ","file":"../window.js","sourcesContent":["define([\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-plugins-base\",\r\n    'skylark-jquery',\r\n    \"skylark-domx-plugins-interact/movable\",\r\n    \"skylark-domx-plugins-interact/resizable\",\r\n    './constants',\r\n    './utilities'\r\n\r\n], function (eventer,plugins,$,  Movable, Resizable, Constants, Utilities,) {\r\n    'use strict';\r\n\r\n    var Window = plugins.Plugin.inherit({\r\n        klassName : \"Window\",\r\n\r\n        pluginName : \"lark.domx.window\",\r\n\r\n        options : {\r\n            selectors : {\r\n                headerPane  : \"\",\r\n                contentPane : \"\",\r\n                footerPane  : \"\",\r\n                titlebar : \"\",\r\n                buttons : {\r\n                    \"fullscreen\" : \".photoviewer-button-fullscreen\",\r\n                    \"maximize\" : \".photoviewer-button-maximize\",\r\n                    \"minimize\" : \".photoviewer-button-minimize\",     \r\n                    \"close\" : \".photoviewer-button-close\"\r\n                }\r\n            },\r\n\r\n            fixedContent: true,\r\n            initMaximized: false,\r\n\r\n\r\n\r\n\r\n            movable : {\r\n                dragHandle: false\r\n            },\r\n            resizable : {\r\n                minWidth: 320,\r\n                minHeight: 320,\r\n            }\r\n        },\r\n\r\n        _construct : function(elm,options) {\r\n            plugins.Plugin.prototype._construct.call(this,elm,options);\r\n            this.isOpened = false;\r\n            this.isMaximized = false;\r\n\r\n            this.$photoviewer = $(this._elm);\r\n\r\n            this._velm = this.elmx();\r\n\r\n            if (this.options.movable) {\r\n                this._movable = new Movable(elm,{\r\n                    handle : this.options.movable.dragHandle,\r\n                    starting : (e) => {\r\n                        const   dragCancel = Constants.CLASS_NS + '-button', \r\n                                elemCancel = $(e.target).closest(dragCancel);\r\n                        if (elemCancel.length) {\r\n                            return false;\r\n                        }\r\n                        if (Constants.PUBLIC_VARS['isResizing'] || this.isMaximized) {\r\n                            return false;\r\n                        }\r\n\r\n                        return true;\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n            if (this.options.resizable) {\r\n\r\n                this._resizable = new Resizable(elm,{\r\n                    handle : {\r\n                        border : {\r\n                            directions : {\r\n                                top: true, //n\r\n                                left: true, //w\r\n                                right: true, //e\r\n                                bottom: true, //s\r\n                                topLeft : true, // nw\r\n                                topRight : true, // ne\r\n                                bottomLeft : true, // sw\r\n                                bottomRight : true // se                         \r\n                            },\r\n                            classes : {\r\n                                all : `${ Constants.NS }-resizable-handle`,\r\n                                top : `${ Constants.NS }-resizable-handle-n`,\r\n                                left: `${ Constants.NS }-resizable-handle-w`,\r\n                                right: `${ Constants.NS }-resizable-handle-e`,\r\n                                bottom: `${ Constants.NS }-resizable-handle-s`, \r\n                                topLeft : `${ Constants.NS }-resizable-handle-nw`, \r\n                                topRight : `${ Constants.NS }-resizable-handle-ne`,\r\n                                bottomLeft : `${ Constants.NS }-resizable-handle-sw`,             \r\n                                bottomRight : `${ Constants.NS }-resizable-handle-se`                         \r\n                            }                        \r\n                        }\r\n                    },\r\n                    constraints : {\r\n                        minWidth : this.options.resizable.minWidth,\r\n                        minHeight : this.options.resizable.minHeight\r\n                    },\r\n                    started : function(){\r\n                        Constants.PUBLIC_VARS['isResizing'] = true;\r\n                    },\r\n                    moving : function(e) {\r\n                        /*\r\n                        const imageWidth = $(image).width();\r\n                        const imageHeight = $(image).height();\r\n                        const stageWidth = $(stage).width();\r\n                        const stageHeight = $(stage).height();\r\n                        const left = (stageWidth - imageWidth) /2;\r\n                        const top = (stageHeight- imageHeight) /2;\r\n                        $(image).css({\r\n                            left,\r\n                            top\r\n                        });\r\n                        */\r\n                    },\r\n                    stopped :function () {\r\n                        Constants.PUBLIC_VARS['isResizing'] = false;\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n            this.$close = this._velm.$(this.options.selectors.buttons.close);\r\n            this.$maximize = this._velm.$(this.options.selectors.buttons.maximize);\r\n            this.$minimize = this._velm.$(this.options.selectors.buttons.minimize);\r\n            this.$fullscreen = this._velm.$(this.options.selectors.buttons.fullscreen);\r\n\r\n\r\n            this.$close.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, e => {\r\n                this.close();\r\n            });\r\n            this.$fullscreen.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, () => {\r\n                this.fullscreen();\r\n            });\r\n            this.$maximize.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, () => {\r\n                this.maximize();\r\n            });\r\n            this.$photoviewer.off(Constants.KEYDOWN_EVENT + Constants.EVENT_NS).on(Constants.KEYDOWN_EVENT + Constants.EVENT_NS, e => {\r\n                this._keydown(e);\r\n            });\r\n            Constants.$W.on(Constants.RESIZE_EVENT + Constants.EVENT_NS, ()=>{\r\n                            eventer.resized(this._elm);\r\n                        });\r\n        },\r\n        close: function() {\r\n            this.trigger('closing', this);\r\n            this.$photoviewer.remove();\r\n            this.isOpened = false;\r\n            this.isMaximized = false;\r\n\r\n            if (!$(Constants.CLASS_NS + '-modal').length) {\r\n                if (this.options.fixedContent) {\r\n                    $('html').css({\r\n                        overflow: '',\r\n                        'padding-right': ''\r\n                    });\r\n                }\r\n                if (this.options.multiInstances) {\r\n                    Constants.PUBLIC_VARS['zIndex'] = this.options.zIndex;\r\n                }\r\n                Constants.$W.off(Constants.RESIZE_EVENT + Constants.EVENT_NS);\r\n            }\r\n            this.trigger('closed', this);\r\n        },\r\n\r\n        maximize: function() {\r\n            this.$photoviewer.get(0).focus();\r\n            if (!this.isMaximized) {\r\n                this.modalData = {\r\n                    width: this.$photoviewer.width(),\r\n                    height: this.$photoviewer.height(),\r\n                    left: this.$photoviewer.offset().left,\r\n                    top: this.$photoviewer.offset().top\r\n                };\r\n                this.$photoviewer.addClass(Constants.NS + '-maximize');\r\n                this.$photoviewer.css({\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    left: 0,\r\n                    top: 0\r\n                });\r\n                this.isMaximized = true;\r\n            } else {\r\n                this.$photoviewer.removeClass(Constants.NS + '-maximize');\r\n                const initModalLeft = (Constants.$W.width() - this.options.modalWidth) / 2 + Constants.$D.scrollLeft();\r\n                const initModalTop = (Constants.$W.height() - this.options.modalHeight) / 2 + Constants.$D.scrollTop();\r\n                this.$photoviewer.css({\r\n                    width: this.modalData.width ? this.modalData.width : this.options.modalWidth,\r\n                    height: this.modalData.height ? this.modalData.height : this.options.modalHeight,\r\n                    left: this.modalData.left ? this.modalData.left : initModalLeft,\r\n                    top: this.modalData.top ? this.modalData.top : initModalTop\r\n                });\r\n                this.isMaximized = false;\r\n            }\r\n\r\n            eventer.resized(this._elm);\r\n        },\r\n        fullscreen: function() {\r\n            this.$photoviewer.get(0).focus();\r\n            Utilities.requestFullscreen(this.$photoviewer[0]);\r\n        },\r\n        _keydown: function(e) {\r\n            if (!this.options.keyboard) {\r\n                return false;\r\n            }\r\n            const keyCode = e.keyCode || e.which || e.charCode;\r\n            const ctrlKey = e.ctrlKey || e.metaKey;\r\n            const altKey = e.altKey || e.metaKey;\r\n            switch (keyCode) {\r\n\r\n                // Q\r\n                case 81:\r\n                    this.close();\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n\r\n    return Window;\r\n});"]}