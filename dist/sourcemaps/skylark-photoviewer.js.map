{"version":3,"sources":["skylark-photoviewer.js"],"names":["define","$","draggable","resizable","movable","keyboard","title","modalWidth","modalHeight","fixedContent","fixedModalSize","initMaximized","gapThreshold","ratioThreshold","minRatio","maxRatio","headerToolbar","footerToolbar","icons","minimize","maximize","close","zoomIn","zoomOut","prev","next","fullscreen","actualSize","rotateLeft","rotateRight","i18n","multiInstances","initAnimation","fixedModalPos","zIndex","dragHandle","callbacks","beforeOpen","noop","opened","beforeClose","closed","beforeChange","changed","index","progressiveLoading","appendTo","customButtons","langx","browser","noder","geom","images","document","window","throttle","debounce","preloadImage","src","success","error","preload","then","data","imgs","requestFullscreen","exitFullscreen","getImageNameFromUrl","url","replace","hasScrollbar","getScrollbarWidth","scrollbarWidth","setGrabCursor","imageData","stageData","stage","isRotated","imageWidth","h","w","imageHeight","addClass","removeClass","supportTouch","support","tocuh","utilities","$W","$D","TOUCH_START_EVENT","TOUCH_MOVE_EVENT","TOUCH_END_EVENT","NS","CLICK_EVENT","RESIZE_EVENT","KEYDOWN_EVENT","WHEEL_EVENT","CLASS_NS","EVENT_NS","PUBLIC_VARS","isMoving","isResizing","Imager","Window","DEFAULTS","Constants","Utilities","PhotoViewer","[object Object]","items","options","el","this","extend","isArray","$el","isOpened","isMaximized","rotateAngle","isDoResize","modalData","width","height","left","top","init","opts","groupData","groupIndex","imgSrc","open","loadImage","toolbar","btns","btnsHTML","each","item","btnClass","indexOf","text","photoviewerHTML","_createBtns","_createTitle","_createTemplate","$photoviewer","$stage","find","$title","$image","$close","$maximize","$minimize","$zoomIn","$zoomOut","$actualSize","$fullscreen","$rotateLeft","$rotateRight","$prev","$next","css","eq","append","_window","selectors","headerPane","contentPane","footerPane","titlebar","buttons","classes","dragCancel","minWidth","minHeight","border","all","right","bottom","topLeft","topRight","bottomLeft","bottomRight","_imager","grab","loader","_addEvents","_addCustomButtonEvents","on","resize","_triggerHook","remove","length","overflow","padding-right","build","setModalPos","get","focus","modal","winWidth","winHeight","scrollLeft","scrollTop","img","stageCSS","borderLeft","borderRight","borderTop","borderBottom","parseFloat","scale","Math","min","max","round","modalCSSObj","animate","setImageSize","fn","err","setModalSize","call","setImageTitle","html","step","jumpTo","ratio","origin","e","zoom","zoomTo","angle","rotate","rotateTo","keyCode","which","charCode","ctrlKey","metaKey","altKey","jump","off","x","y","_keydown","btnKey","click","apply","main"],"mappings":"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","file":"../skylark-photoviewer.js","sourcesContent":["define('skylark-photoviewer/domq',['skylark-jquery'], function ($) {\n    'use strict';\n\n    return $;\n});\ndefine('skylark-photoviewer/defaults',[\n    './domq'\n], function ($) {\n    'use strict';\n    return {\n        draggable: true,\n        resizable: true,\n        movable: true,\n        keyboard: true,\n        title: true,\n        modalWidth: 320,\n        modalHeight: 320,\n        fixedContent: true,\n        fixedModalSize: false,\n        initMaximized: false,\n        gapThreshold: 0.02,\n        ratioThreshold: 0.1,\n        minRatio: 0.05,\n        maxRatio: 16,\n        headerToolbar: [\n            'maximize',\n            'close'\n        ],\n        footerToolbar: [\n            'zoomIn',\n            'zoomOut',\n            'prev',\n            'fullscreen',\n            'next',\n            'actualSize',\n            'rotateRight'\n        ],\n        icons: {\n            minimize: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M20,14H4V10H20\"></path>\n      </svg>`,\n            maximize: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M4,4H20V20H4V4M6,8V18H18V8H6Z\"></path>\n      </svg>`,\n            close: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M13.46,12L19,17.54V19H17.54L12,13.46L6.46,19H5V17.54L10.54,12\n        L5,6.46V5H6.46L12,10.54L17.54,5H19V6.46L13.46,12Z\"></path>\n      </svg>`,\n            zoomIn: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M15.5,14L20.5,19L19,20.5L14,15.5V14.71L13.73,14.43\n        C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3A6.5,6.5 0 0,1 16,9.5\n        C16,11.11 15.41,12.59 14.43,13.73L14.71,14H15.5M9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5\n        C7,5 5,7 5,9.5C5,12 7,14 9.5,14M12,10H10V12H9V10H7V9H9V7H10V9H12V10Z\"></path>\n      </svg>`,\n            zoomOut: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M15.5,14H14.71L14.43,13.73C15.41,12.59 16,11.11 16,9.5\n        A6.5,6.5 0 0,0 9.5,3A6.5,6.5 0 0,0 3,9.5A6.5,6.5 0 0,0 9.5,16\n        C11.11,16 12.59,15.41 13.73,14.43L14,14.71V15.5L19,20.5L20.5,19L15.5,14M9.5,14\n        C7,14 5,12 5,9.5C5,7 7,5 9.5,5C12,5 14,7 14,9.5C14,12 12,14 9.5,14M7,9H12V10H7V9Z\"></path>\n      </svg>`,\n            prev: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M6,18V6H8V18H6M9.5,12L18,6V18L9.5,12Z\"></path>\n      </svg>`,\n            next: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M16,18H18V6H16M6,18L14.5,12L6,6V18Z\"></path>\n      </svg>`,\n            fullscreen: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M8.5,12.5L11,15.5L14.5,11L19,17H5M23,18V6A2,2 0 0,0 21,4H3\n        A2,2 0 0,0 1,6V18A2,2 0 0,0 3,20H21A2,2 0 0,0 23,18Z\"></path>\n      </svg>`,\n            actualSize: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M9.5,13.09L10.91,14.5L6.41,19H10V21H3V14H5V17.59L9.5,13.09\n        M10.91,9.5L9.5,10.91L5,6.41V10H3V3H10V5H6.41L10.91,9.5M14.5,13.09L19,17.59V14H21V21H14V19\n        H17.59L13.09,14.5L14.5,13.09M13.09,9.5L17.59,5H14V3H21V10H19V6.41L14.5,10.91\n        L13.09,9.5Z\"></path>\n      </svg>`,\n            rotateLeft: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M13,4.07V1L8.45,5.55L13,10V6.09C15.84,6.57 18,9.03 18,12\n        C18,14.97 15.84,17.43 13,17.91V19.93C16.95,19.44 20,16.08 20,12C20,7.92 16.95,4.56 13,4.07\n        M7.1,18.32C8.26,19.22 9.61,19.76 11,19.93V17.9C10.13,17.75 9.29,17.41 8.54,16.87L7.1,18.32\n        M6.09,13H4.07C4.24,14.39 4.79,15.73 5.69,16.89L7.1,15.47C6.58,14.72 6.23,13.88 6.09,13\n        M7.11,8.53L5.7,7.11C4.8,8.27 4.24,9.61 4.07,11H6.09C6.23,10.13 6.58,9.28 7.11,8.53Z\"></path>\n      </svg>`,\n            rotateRight: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M16.89,15.5L18.31,16.89C19.21,15.73 19.76,14.39 19.93,13H17.91\n        C17.77,13.87 17.43,14.72 16.89,15.5M13,17.9V19.92C14.39,19.75 15.74,19.21 16.9,18.31\n        L15.46,16.87C14.71,17.41 13.87,17.76 13,17.9M19.93,11C19.76,9.61 19.21,8.27 18.31,7.11\n        L16.89,8.53C17.43,9.28 17.77,10.13 17.91,11M15.55,5.55L11,1V4.07C7.06,4.56 4,7.92 4,12\n        C4,16.08 7.05,19.44 11,19.93V17.91C8.16,17.43 6,14.97 6,12C6,9.03 8.16,6.57 11,6.09V10\n        L15.55,5.55Z\"></path>\n      </svg>`\n        },\n        i18n: {\n            minimize: 'minimize',\n            maximize: 'maximize',\n            close: 'close',\n            zoomIn: 'zoom-in (+)',\n            zoomOut: 'zoom-out (-)',\n            prev: 'prev (\\u2190)',\n            next: 'next (\\u2192)',\n            fullscreen: 'fullscreen',\n            actualSize: 'actual-size (Ctrl+Alt+0)',\n            rotateLeft: 'rotate-left (Ctrl+,)',\n            rotateRight: 'rotate-right (Ctrl+.)'\n        },\n        multiInstances: true,\n        initAnimation: true,\n        fixedModalPos: false,\n        zIndex: 1090,\n        dragHandle: false,\n        callbacks: {\n            beforeOpen: $.noop,\n            opened: $.noop,\n            beforeClose: $.noop,\n            closed: $.noop,\n            beforeChange: $.noop,\n            changed: $.noop\n        },\n        index: 0,\n        progressiveLoading: true,\n        appendTo: 'body',\n        customButtons: {}\n    };\n});\ndefine('skylark-photoviewer/utilities',[\n    \"skylark-langx\",\n    \"skylark-domx-browser\",\n    \"skylark-domx-noder\",\n    \"skylark-domx-geom\",\n    \"skylark-domx-images\"\n],function (langx,browser,noder,geom,images) {\n    'use strict';\n    const document = window.document;\n\n    /*\n    function throttle(fn, delay) {\n        let timer = null;\n        return function () {\n            const context = this;\n            const args = arguments;\n            clearTimeout(timer);\n            timer = setTimeout(function () {\n                fn.apply(context, args);\n            }, delay);\n        };\n    }\n    function preloadImage(src, success, error) {\n        const img = new Image();\n        img.onload = function () {\n            success(img);\n        };\n        img.onerror = function () {\n            error(img);\n        };\n        img.src = src;\n    }\n    function requestFullscreen(element) {\n        if (element.requestFullscreen) {\n            element.requestFullscreen();\n        } else if (element.mozRequestFullScreen) {\n            element.mozRequestFullScreen();\n        } else if (element.webkitRequestFullscreen) {\n            element.webkitRequestFullscreen();\n        } else if (element.msRequestFullscreen) {\n            element.msRequestFullscreen();\n        }\n    }\n    function exitFullscreen() {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        }\n    }\n\n\n    function getScrollbarWidth() {\n        const scrollDiv = document.createElement('div');\n        scrollDiv.style.cssText = 'width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;';\n        document.body.appendChild(scrollDiv);\n        const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        document.body.removeChild(scrollDiv);\n        return scrollbarWidth;\n    }\n\n    function hasScrollbar() {\n        return document.body.scrollHeight > (window.innerHeight || document.documentElement.clientHeight);\n    }\n\n\n    function supportTouch() {\n        return !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch);\n    }\n\n    */\n \n\n     function setGrabCursor(imageData, stageData, stage, isRotated) {\n        const imageWidth = !isRotated ? imageData.w : imageData.h;\n        const imageHeight = !isRotated ? imageData.h : imageData.w;\n        if (imageHeight > stageData.h || imageWidth > stageData.w) {\n            stage.addClass('is-grab');\n        }\n        if (imageHeight <= stageData.h && imageWidth <= stageData.w) {\n            stage.removeClass('is-grab');\n        }\n    }\n\n    function getImageNameFromUrl(url) {\n        const reg = /^.*?\\/*([^/?]*)\\.[a-z]+(\\?.+|$)/gi;\n        const txt = url.replace(reg, '$1');\n        return txt;\n    }\n\n    return {\n        document: document,\n        throttle: langx.debounce,\n        preloadImage: function preloadImage(src, success, error) {\n            images.preload(src).then(function(data){\n                success(data.imgs[0]);\n            },error);\n        },\n        requestFullscreen: noder.fullscreen,\n        exitFullscreen: noder.fullscreen,\n        getImageNameFromUrl: getImageNameFromUrl,\n        hasScrollbar: geom.hasScrollbar,\n        getScrollbarWidth: geom.scrollbarWidth,\n        setGrabCursor: setGrabCursor,\n        supportTouch: function() {\n            return browser.support.tocuh;\n        }\n    }\n});\ndefine('skylark-photoviewer/constants',[\n    './domq',\n    './utilities'\n], function ($, utilities) {\n    'use strict';\n    const $W = $(window);\n    const $D = $(utilities.document);\n    const CLICK_EVENT = 'click';\n    const RESIZE_EVENT = 'resize';\n    const KEYDOWN_EVENT = 'keydown';\n    const WHEEL_EVENT = 'wheel mousewheel DOMMouseScroll';\n    const TOUCH_START_EVENT = utilities.supportTouch() ? 'touchstart' : 'mousedown';\n    const TOUCH_MOVE_EVENT = utilities.supportTouch() ? 'touchmove' : 'mousemove';\n    const TOUCH_END_EVENT = utilities.supportTouch() ? 'touchend' : 'mouseup';\n    const NS = 'photoviewer';\n    const CLASS_NS = '.' + NS;\n    const EVENT_NS = '.' + NS;\n    const PUBLIC_VARS = {\n        isMoving: false,\n        isResizing: false,\n        zIndex: 0\n    };\n    return {\n        $W: $W,\n        $D: $D,\n        CLICK_EVENT: CLICK_EVENT,\n        RESIZE_EVENT: RESIZE_EVENT,\n        KEYDOWN_EVENT: KEYDOWN_EVENT,\n        WHEEL_EVENT: WHEEL_EVENT,\n        TOUCH_START_EVENT: TOUCH_START_EVENT,\n        TOUCH_MOVE_EVENT: TOUCH_MOVE_EVENT,\n        TOUCH_END_EVENT: TOUCH_END_EVENT,\n        NS: NS,\n        CLASS_NS: CLASS_NS,\n        EVENT_NS: EVENT_NS,\n        PUBLIC_VARS: PUBLIC_VARS\n    };\n});\ndefine('skylark-photoviewer/core',[\n    \"skylark-domx-plugins-pictures/viewer\",\n    \"skylark-domx-plugins-windows/window\",\n    './domq',\n    './defaults',\n    './constants',\n    './utilities'\n], function (Imager,Window,$, DEFAULTS, Constants, Utilities) {\n    'use strict';\n\n    \n    class PhotoViewer {\n        constructor(items, options, el) {\n            this.options = $.extend(true, {}, DEFAULTS, options);\n            if (options && $.isArray(options.footerToolbar)) {\n                this.options.footerToolbar = options.footerToolbar;\n            }\n            if (options && $.isArray(options.headerToolbar)) {\n                this.options.headerToolbar = options.headerToolbar;\n            }\n            this.$el = $(el);\n            this.isOpened = false;\n            this.isMaximized = false;\n            this.isRotated = false;\n            this.rotateAngle = 0;\n            this.isDoResize = false;\n            this.imageData = {};\n            this.modalData = {\n                width: null,\n                height: null,\n                left: null,\n                top: null\n            };\n            this.init(items, this.options);\n        }\n        init(items, opts) {\n            this.groupData = items;\n            this.groupIndex = opts['index'];\n            Constants.PUBLIC_VARS['zIndex'] = Constants.PUBLIC_VARS['zIndex'] === 0 ? opts['zIndex'] : Constants.PUBLIC_VARS['zIndex'];\n            const imgSrc = items[this.groupIndex]['src'];\n            this.open();\n            this.loadImage(imgSrc);\n            ///if (opts.draggable) {\n            ///    this.draggable(this.$photoviewer, this.dragHandle, Constants.CLASS_NS + '-button');\n            ///}\n            ///if (opts.movable) {\n            ///    this.movable(this.$stage, this.$image);\n            ///}\n            ///if (opts.resizable) {\n            ///    this.resizable(this.$photoviewer, this.$stage, this.$image, opts.modalWidth, opts.modalHeight);\n            ///}\n        }\n        _createBtns(toolbar) {\n            const btns = [\n                'minimize',\n                'maximize',\n                'close',\n                'zoomIn',\n                'zoomOut',\n                'prev',\n                'next',\n                'fullscreen',\n                'actualSize',\n                'rotateLeft',\n                'rotateRight'\n            ];\n            let btnsHTML = '';\n            $.each(toolbar, (index, item) => {\n                const btnClass = `${ Constants.NS }-button ${ Constants.NS }-button-${ item }`;\n                if (btns.indexOf(item) >= 0) {\n                    btnsHTML += `<button class=\"${ btnClass }\" title=\"${ this.options.i18n[item] }\">\n          ${ this.options.icons[item] }\n          </button>`;\n                } else if (this.options.customButtons[item]) {\n                    btnsHTML += `<button class=\"${ btnClass }\" title=\"${ this.options.customButtons[item].title || '' }\">\n          ${ this.options.customButtons[item].text }\n          </button>`;\n                }\n            });\n            return btnsHTML;\n        }\n        _createTitle() {\n            return this.options.title ? `<div class=\"${ Constants.NS }-title\"></div>` : '';\n        }\n        _createTemplate() {\n            const photoviewerHTML = `<div class=\"${ Constants.NS }-modal\" tabindex=\"0\">\n        <div class=\"${ Constants.NS }-inner\">\n          <div class=\"${ Constants.NS }-header\">\n            <div class=\"${ Constants.NS }-toolbar ${ Constants.NS }-toolbar-header\">\n            ${ this._createBtns(this.options.headerToolbar) }\n            </div>\n            ${ this._createTitle() }\n          </div>\n          <div class=\"${ Constants.NS }-stage\">\n            <img class=\"${ Constants.NS }-image\" src=\"\" alt=\"\" />\n          </div>\n          <div class=\"${ Constants.NS }-footer\">\n            <div class=\"${ Constants.NS }-toolbar ${ Constants.NS }-toolbar-footer\">\n            ${ this._createBtns(this.options.footerToolbar) }\n            </div>\n          </div>\n        </div>\n      </div>`;\n            return photoviewerHTML;\n        }\n        build() {\n            const photoviewerHTML = this._createTemplate();\n            const $photoviewer = $(photoviewerHTML);\n            this.$photoviewer = $photoviewer;\n            this.$stage = $photoviewer.find(Constants.CLASS_NS + '-stage');\n            this.$title = $photoviewer.find(Constants.CLASS_NS + '-title');\n            this.$image = $photoviewer.find(Constants.CLASS_NS + '-image');\n            this.$close = $photoviewer.find(Constants.CLASS_NS + '-button-close');\n            this.$maximize = $photoviewer.find(Constants.CLASS_NS + '-button-maximize');\n            this.$minimize = $photoviewer.find(Constants.CLASS_NS + '-button-minimize');\n            this.$zoomIn = $photoviewer.find(Constants.CLASS_NS + '-button-zoomIn');\n            this.$zoomOut = $photoviewer.find(Constants.CLASS_NS + '-button-zoomOut');\n            this.$actualSize = $photoviewer.find(Constants.CLASS_NS + '-button-actualSize');\n            this.$fullscreen = $photoviewer.find(Constants.CLASS_NS + '-button-fullscreen');\n            this.$rotateLeft = $photoviewer.find(Constants.CLASS_NS + '-button-rotateLeft');\n            this.$rotateRight = $photoviewer.find(Constants.CLASS_NS + '-button-rotateRight');\n            this.$prev = $photoviewer.find(Constants.CLASS_NS + '-button-prev');\n            this.$next = $photoviewer.find(Constants.CLASS_NS + '-button-next');\n            this.$stage.addClass('stage-ready');\n            this.$image.addClass('image-ready');\n            this.$photoviewer.css('z-index', Constants.PUBLIC_VARS['zIndex']);\n            if (!this.options.dragHandle || this.options.dragHandle === Constants.CLASS_NS + '-modal') {\n                this.dragHandle = this.$photoviewer;\n            } else {\n                this.dragHandle = this.$photoviewer.find(this.options.dragHandle);\n            }\n            $(this.options.appendTo).eq(0).append(this.$photoviewer);\n\n            this._window = new Window(this.$photoviewer[0],{\n                selectors : {\n                    headerPane  : \"\",\n                    contentPane : \"\",\n                    footerPane  : \"\",\n                    titlebar : \"\",\n                    buttons : {\n                        \"fullscreen\" : \".photoviewer-button-fullscreen\",\n                        \"maximize\" : \".photoviewer-button-maximize\",\n                        \"minimize\" : \".photoviewer-button-minimize\",     \n                        \"close\" : \".photoviewer-button-close\"\n                    }\n                },\n                classes : {\n                    \"maximize\" : Constants.NS + '-maximize',\n                },\n                fixedContent: true,\n                initMaximized: false,\n\n\n\n                movable : {\n\n                    dragHandle: this.options.dragHandle,\n                    dragCancel: Constants.CLASS_NS + '-button'\n                },\n                resizable : {\n                    minWidth: 320,\n                    minHeight: 320,\n                    border : {\n                        classes :  {\n                            all : `${ Constants.NS }-resizable-handle`,\n                            top : `${ Constants.NS }-resizable-handle-n`,\n                            left: `${ Constants.NS }-resizable-handle-w`,\n                            right: `${ Constants.NS }-resizable-handle-e`,\n                            bottom: `${ Constants.NS }-resizable-handle-s`, \n                            topLeft : `${ Constants.NS }-resizable-handle-nw`, \n                            topRight : `${ Constants.NS }-resizable-handle-ne`,\n                            bottomLeft : `${ Constants.NS }-resizable-handle-sw`,             \n                            bottomRight : `${ Constants.NS }-resizable-handle-se`   \n                        }\n                    }\n                }\n            });\n            this._imager = new Imager(this.$stage[0],{\n                ratioThreshold: this.options.ratioThreshold,\n                minRatio: this.options.minRatio,\n                maxRatio: this.options.maxRatio,\n                movable : true,\n\n                classes : {\n                    grab : \"is-grab\",\n                    loader : \"${ Constants.NS }-loader\"\n                }                \n            });\n\n            this._addEvents();\n            this._addCustomButtonEvents();\n\n            this.$photoviewer.on(\"resized\",()=>{\n                this._imager.resize();;\n            });\n        }\n        open() {\n            this._triggerHook('beforeOpen', this);\n            if (!this.options.multiInstances) {\n                $(Constants.CLASS_NS + '-modal').eq(0).remove();\n            }\n            if (!$(Constants.CLASS_NS + '-modal').length && this.options.fixedContent) {\n                $('html').css({ overflow: 'hidden' });\n                if (Utilities.hasScrollbar()) {\n                    const scrollbarWidth = Utilities.getScrollbarWidth();\n                    if (scrollbarWidth) {\n                        $('html').css({ 'padding-right': scrollbarWidth });\n                    }\n                }\n            }\n            this.build();\n            this.setModalPos(this.$photoviewer);\n            this.$photoviewer.get(0).focus();\n            this._triggerHook('opened', this);\n        }\n        close() {\n            this._window.close();\n        }\n        setModalPos(modal) {\n            const winWidth = Constants.$W.width();\n            const winHeight = Constants.$W.height();\n            const scrollLeft = Constants.$D.scrollLeft();\n            const scrollTop = Constants.$D.scrollTop();\n            const modalWidth = this.options.modalWidth;\n            const modalHeight = this.options.modalHeight;\n            if (this.options.initMaximized) {\n                modal.addClass(Constants.NS + '-maximize');\n                modal.css({\n                    width: '100%',\n                    height: '100%',\n                    left: 0,\n                    top: 0\n                });\n                this.isOpened = true;\n                this.isMaximized = true;\n            } else {\n                modal.css({\n                    width: modalWidth,\n                    height: modalHeight,\n                    left: (winWidth - modalWidth) / 2 + scrollLeft + 'px',\n                    top: (winHeight - modalHeight) / 2 + scrollTop + 'px'\n                });\n            }\n        }\n        setModalSize(img) {\n            const winWidth = Constants.$W.width();\n            const winHeight = Constants.$W.height();\n            const scrollLeft = Constants.$D.scrollLeft();\n            const scrollTop = Constants.$D.scrollTop();\n            const stageCSS = {\n                left: this.$stage.css('left'),\n                right: this.$stage.css('right'),\n                top: this.$stage.css('top'),\n                bottom: this.$stage.css('bottom'),\n                borderLeft: this.$stage.css('border-left-width'),\n                borderRight: this.$stage.css('border-right-width'),\n                borderTop: this.$stage.css('border-top-width'),\n                borderBottom: this.$stage.css('border-bottom-width')\n            };\n            const modalWidth = img.width + parseFloat(stageCSS.left) + parseFloat(stageCSS.right) + parseFloat(stageCSS.borderLeft) + parseFloat(stageCSS.borderRight);\n            const modalHeight = img.height + parseFloat(stageCSS.top) + parseFloat(stageCSS.bottom) + parseFloat(stageCSS.borderTop) + parseFloat(stageCSS.borderBottom);\n            const gapThreshold = (this.options.gapThreshold > 0 ? this.options.gapThreshold : 0) + 1;\n            const scale = Math.min(winWidth / (modalWidth * gapThreshold), winHeight / (modalHeight * gapThreshold), 1);\n            let minWidth = Math.max(modalWidth * scale, this.options.modalWidth);\n            let minHeight = Math.max(modalHeight * scale, this.options.modalHeight);\n            minWidth = this.options.fixedModalSize ? this.options.modalWidth : Math.round(minWidth);\n            minHeight = this.options.fixedModalSize ? this.options.modalHeight : Math.round(minHeight);\n            const modalCSSObj = {\n                width: minWidth + 'px',\n                height: minHeight + 'px',\n                left: (winWidth - minWidth) / 2 + scrollLeft + 'px',\n                top: (winHeight - minHeight) / 2 + scrollTop + 'px'\n            };\n            if (this.options.initAnimation) {\n                this.$photoviewer.animate(modalCSSObj, 400, 'ease-in-out', () => {\n                    this.setImageSize(img);\n                });\n            } else {\n                this.$photoviewer.css(modalCSSObj);\n                this.setImageSize(img);\n            }\n            this.isOpened = true;\n        }\n\n        setImageSize(img) {\n            this._imager.setImageSize(img);\n        }\n        loadImage(imgSrc, fn, err) {\n            this._imager.loadImage(imgSrc,(img) => {\n                this.setModalSize(img);\n                if (fn) {\n                    fn.call();\n                }\n            },err);\n            if (this.options.title) {\n                this.setImageTitle(imgSrc);\n            }\n        }\n        setImageTitle(url) {\n            const title = this.groupData[this.groupIndex].title || Utilities.getImageNameFromUrl(url);\n            this.$title.html(title);\n        }\n        jump(step) {\n            this._triggerHook('beforeChange', [\n                this,\n                this.groupIndex\n            ]);\n            this.groupIndex = this.groupIndex + step;\n            this.jumpTo(this.groupIndex);\n        }\n        jumpTo(index) {\n            index = index % this.groupData.length;\n            if (index >= 0) {\n                index = index % this.groupData.length;\n            } else if (index < 0) {\n                index = (this.groupData.length + index) % this.groupData.length;\n            }\n            this.groupIndex = index;\n            this.loadImage(this.groupData[index].src, () => {\n                this._triggerHook('changed', [\n                    this,\n                    index\n                ]);\n            }, () => {\n                this._triggerHook('changed', [\n                    this,\n                    index\n                ]);\n            });\n        }\n        zoom(ratio, origin, e) {\n            this._imager.zoom(ratio,origin,e);\n        }\n        zoomTo(ratio, origin, e) {\n            this._imager.zoomTo(ratio,origin,e);\n        }\n        rotate(angle) {\n            this._imager.rotate(angle);\n        }\n        rotateTo(angle) {\n            this._imager.rotateTo(angle);\n        }\n        resize() {\n            return this._imager.resize();\n        }\n        maximize() {\n            this._window.maximize();\n        }\n        fullscreen() {\n            this._window.fullscreen();\n        }\n        _keydown(e) {\n            if (!this.options.keyboard) {\n                return false;\n            }\n            const keyCode = e.keyCode || e.which || e.charCode;\n            const ctrlKey = e.ctrlKey || e.metaKey;\n            const altKey = e.altKey || e.metaKey;\n            switch (keyCode) {\n                // ←\n                case 37:\n                    this.jump(-1);\n                    break;\n                // →\n                case 39:\n                    this.jump(1);\n                    break;\n                // Q\n                case 81:\n                    this.close();\n                    break;\n                default:\n            }\n        }\n        _addEvents() {\n\n            this.$zoomIn.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, e => {\n                this.zoom(this.options.ratioThreshold * 3, {\n                    x: this.$stage.width() / 2,\n                    y: this.$stage.height() / 2\n                }, e);\n            });\n            this.$zoomOut.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, e => {\n                this.zoom(-this.options.ratioThreshold * 3, {\n                    x: this.$stage.width() / 2,\n                    y: this.$stage.height() / 2\n                }, e);\n            });\n            this.$actualSize.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, e => {\n                this.zoomTo(1, {\n                    x: this.$stage.width() / 2,\n                    y: this.$stage.height() / 2\n                }, e);\n            });\n            this.$prev.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, () => {\n                this.jump(-1);\n            });\n\n            this.$next.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, () => {\n                this.jump(1);\n            });\n            this.$rotateLeft.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, () => {\n                this.rotate(-90);\n            });\n            this.$rotateRight.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, () => {\n                this.rotate(90);\n            });\n\n            this.$photoviewer.off(Constants.KEYDOWN_EVENT + Constants.EVENT_NS).on(Constants.KEYDOWN_EVENT + Constants.EVENT_NS, e => {\n                this._keydown(e);\n            });\n            ///Constants.$W.on(Constants.RESIZE_EVENT + Constants.EVENT_NS, this.resize());\n        }\n        _addCustomButtonEvents() {\n            for (const btnKey in this.options.customButtons) {\n                this.$photoviewer.find(Constants.CLASS_NS + '-button-' + btnKey).off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, e => {\n                    this.options.customButtons[btnKey].click.apply(this, [\n                        this,\n                        e\n                    ]);\n                });\n            }\n        }\n        _triggerHook(e, data) {\n            if (this.options.callbacks[e]) {\n                this.options.callbacks[e].apply(this, $.isArray(data) ? data : [data]);\n            }\n        }\n    }\n    //$.extend(PhotoViewer.prototype, draggable, movable, resizable);\n\n    ///$.extend(PhotoViewer.prototype, movable);\n\n    window.PhotoViewer = PhotoViewer;\n    return PhotoViewer;\n});\ndefine('skylark-photoviewer/main',[\n\t'./core'\n], function (PhotoViewer) {\n    'use strict';\n    return PhotoViewer;\n});\ndefine('skylark-photoviewer', ['skylark-photoviewer/main'], function (main) { return main; });\n\n"]}