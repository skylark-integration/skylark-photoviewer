{"version":3,"sources":["skylark-photoviewer.js"],"names":["define","$","draggable","resizable","movable","keyboard","title","modalWidth","modalHeight","fixedContent","fixedModalSize","initMaximized","gapThreshold","ratioThreshold","minRatio","maxRatio","headerToolbar","footerToolbar","icons","minimize","maximize","close","zoomIn","zoomOut","prev","next","fullscreen","actualSize","rotateLeft","rotateRight","i18n","multiInstances","initAnimation","fixedModalPos","zIndex","dragHandle","callbacks","beforeOpen","noop","opened","beforeClose","closed","beforeChange","changed","index","progressiveLoading","appendTo","customButtons","langx","browser","noder","geom","images","document","window","throttle","debounce","preloadImage","src","success","error","preload","then","data","imgs","requestFullscreen","exitFullscreen","getImageNameFromUrl","url","replace","hasScrollbar","getScrollbarWidth","scrollbarWidth","setGrabCursor","imageData","stageData","stage","isRotated","imageWidth","h","w","imageHeight","addClass","removeClass","supportTouch","support","tocuh","utilities","$W","$D","TOUCH_START_EVENT","TOUCH_MOVE_EVENT","TOUCH_END_EVENT","NS","CLICK_EVENT","RESIZE_EVENT","KEYDOWN_EVENT","WHEEL_EVENT","CLASS_NS","EVENT_NS","PUBLIC_VARS","isMoving","isResizing","eventer","plugins","Movable","Resizable","Constants","Utilities","Window","Plugin","inherit","klassName","pluginName","options","selectors","headerPane","contentPane","footerPane","titlebar","buttons","minWidth","minHeight","_construct","elm","prototype","call","this","isOpened","isMaximized","$photoviewer","_elm","_velm","elmx","_movable","handle","starting","e","dragCancel","elemCancel","target","closest","length","_resizable","border","directions","top","left","right","bottom","topLeft","topRight","bottomLeft","bottomRight","classes","all","constraints","started","moving","stopped","$close","$maximize","$minimize","$fullscreen","off","on","_keydown","resized","trigger","remove","css","overflow","padding-right","get","focus","initModalLeft","width","scrollLeft","initModalTop","height","scrollTop","modalData","offset","keyCode","which","charCode","ctrlKey","metaKey","altKey","Imager","DEFAULTS","PhotoViewer","[object Object]","items","el","extend","isArray","$el","rotateAngle","isDoResize","init","opts","groupData","groupIndex","imgSrc","open","loadImage","toolbar","btns","btnsHTML","each","item","btnClass","indexOf","text","photoviewerHTML","_createBtns","_createTitle","_createTemplate","$stage","find","$title","$image","$zoomIn","$zoomOut","$actualSize","$rotateLeft","$rotateRight","$prev","$next","eq","append","_window","_imager","grab","loader","_addEvents","_addCustomButtonEvents","resize","_triggerHook","build","setModalPos","modal","winWidth","winHeight","img","stageCSS","borderLeft","borderRight","borderTop","borderBottom","parseFloat","scale","Math","min","max","round","modalCSSObj","animate","setImageSize","fn","err","setModalSize","setImageTitle","html","step","jumpTo","ratio","origin","zoom","zoomTo","angle","rotate","rotateTo","jump","x","y","btnKey","click","apply","main"],"mappings":"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","file":"../skylark-photoviewer.js","sourcesContent":["define('skylark-photoviewer/domq',['skylark-jquery'], function ($) {\n    'use strict';\n\n    return $;\n});\ndefine('skylark-photoviewer/defaults',[\n    './domq'\n], function ($) {\n    'use strict';\n    return {\n        draggable: true,\n        resizable: true,\n        movable: true,\n        keyboard: true,\n        title: true,\n        modalWidth: 320,\n        modalHeight: 320,\n        fixedContent: true,\n        fixedModalSize: false,\n        initMaximized: false,\n        gapThreshold: 0.02,\n        ratioThreshold: 0.1,\n        minRatio: 0.05,\n        maxRatio: 16,\n        headerToolbar: [\n            'maximize',\n            'close'\n        ],\n        footerToolbar: [\n            'zoomIn',\n            'zoomOut',\n            'prev',\n            'fullscreen',\n            'next',\n            'actualSize',\n            'rotateRight'\n        ],\n        icons: {\n            minimize: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M20,14H4V10H20\"></path>\n      </svg>`,\n            maximize: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M4,4H20V20H4V4M6,8V18H18V8H6Z\"></path>\n      </svg>`,\n            close: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M13.46,12L19,17.54V19H17.54L12,13.46L6.46,19H5V17.54L10.54,12\n        L5,6.46V5H6.46L12,10.54L17.54,5H19V6.46L13.46,12Z\"></path>\n      </svg>`,\n            zoomIn: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M15.5,14L20.5,19L19,20.5L14,15.5V14.71L13.73,14.43\n        C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3A6.5,6.5 0 0,1 16,9.5\n        C16,11.11 15.41,12.59 14.43,13.73L14.71,14H15.5M9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5\n        C7,5 5,7 5,9.5C5,12 7,14 9.5,14M12,10H10V12H9V10H7V9H9V7H10V9H12V10Z\"></path>\n      </svg>`,\n            zoomOut: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M15.5,14H14.71L14.43,13.73C15.41,12.59 16,11.11 16,9.5\n        A6.5,6.5 0 0,0 9.5,3A6.5,6.5 0 0,0 3,9.5A6.5,6.5 0 0,0 9.5,16\n        C11.11,16 12.59,15.41 13.73,14.43L14,14.71V15.5L19,20.5L20.5,19L15.5,14M9.5,14\n        C7,14 5,12 5,9.5C5,7 7,5 9.5,5C12,5 14,7 14,9.5C14,12 12,14 9.5,14M7,9H12V10H7V9Z\"></path>\n      </svg>`,\n            prev: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M6,18V6H8V18H6M9.5,12L18,6V18L9.5,12Z\"></path>\n      </svg>`,\n            next: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M16,18H18V6H16M6,18L14.5,12L6,6V18Z\"></path>\n      </svg>`,\n            fullscreen: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M8.5,12.5L11,15.5L14.5,11L19,17H5M23,18V6A2,2 0 0,0 21,4H3\n        A2,2 0 0,0 1,6V18A2,2 0 0,0 3,20H21A2,2 0 0,0 23,18Z\"></path>\n      </svg>`,\n            actualSize: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M9.5,13.09L10.91,14.5L6.41,19H10V21H3V14H5V17.59L9.5,13.09\n        M10.91,9.5L9.5,10.91L5,6.41V10H3V3H10V5H6.41L10.91,9.5M14.5,13.09L19,17.59V14H21V21H14V19\n        H17.59L13.09,14.5L14.5,13.09M13.09,9.5L17.59,5H14V3H21V10H19V6.41L14.5,10.91\n        L13.09,9.5Z\"></path>\n      </svg>`,\n            rotateLeft: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M13,4.07V1L8.45,5.55L13,10V6.09C15.84,6.57 18,9.03 18,12\n        C18,14.97 15.84,17.43 13,17.91V19.93C16.95,19.44 20,16.08 20,12C20,7.92 16.95,4.56 13,4.07\n        M7.1,18.32C8.26,19.22 9.61,19.76 11,19.93V17.9C10.13,17.75 9.29,17.41 8.54,16.87L7.1,18.32\n        M6.09,13H4.07C4.24,14.39 4.79,15.73 5.69,16.89L7.1,15.47C6.58,14.72 6.23,13.88 6.09,13\n        M7.11,8.53L5.7,7.11C4.8,8.27 4.24,9.61 4.07,11H6.09C6.23,10.13 6.58,9.28 7.11,8.53Z\"></path>\n      </svg>`,\n            rotateRight: `<svg viewBox=\"0 0 24 24\" class=\"svg-inline-icon\">\n        <path fill=\"currentColor\" d=\"M16.89,15.5L18.31,16.89C19.21,15.73 19.76,14.39 19.93,13H17.91\n        C17.77,13.87 17.43,14.72 16.89,15.5M13,17.9V19.92C14.39,19.75 15.74,19.21 16.9,18.31\n        L15.46,16.87C14.71,17.41 13.87,17.76 13,17.9M19.93,11C19.76,9.61 19.21,8.27 18.31,7.11\n        L16.89,8.53C17.43,9.28 17.77,10.13 17.91,11M15.55,5.55L11,1V4.07C7.06,4.56 4,7.92 4,12\n        C4,16.08 7.05,19.44 11,19.93V17.91C8.16,17.43 6,14.97 6,12C6,9.03 8.16,6.57 11,6.09V10\n        L15.55,5.55Z\"></path>\n      </svg>`\n        },\n        i18n: {\n            minimize: 'minimize',\n            maximize: 'maximize',\n            close: 'close',\n            zoomIn: 'zoom-in (+)',\n            zoomOut: 'zoom-out (-)',\n            prev: 'prev (\\u2190)',\n            next: 'next (\\u2192)',\n            fullscreen: 'fullscreen',\n            actualSize: 'actual-size (Ctrl+Alt+0)',\n            rotateLeft: 'rotate-left (Ctrl+,)',\n            rotateRight: 'rotate-right (Ctrl+.)'\n        },\n        multiInstances: true,\n        initAnimation: true,\n        fixedModalPos: false,\n        zIndex: 1090,\n        dragHandle: false,\n        callbacks: {\n            beforeOpen: $.noop,\n            opened: $.noop,\n            beforeClose: $.noop,\n            closed: $.noop,\n            beforeChange: $.noop,\n            changed: $.noop\n        },\n        index: 0,\n        progressiveLoading: true,\n        appendTo: 'body',\n        customButtons: {}\n    };\n});\ndefine('skylark-photoviewer/utilities',[\n    \"skylark-langx\",\n    \"skylark-domx-browser\",\n    \"skylark-domx-noder\",\n    \"skylark-domx-geom\",\n    \"skylark-domx-images\"\n],function (langx,browser,noder,geom,images) {\n    'use strict';\n    const document = window.document;\n\n    /*\n    function throttle(fn, delay) {\n        let timer = null;\n        return function () {\n            const context = this;\n            const args = arguments;\n            clearTimeout(timer);\n            timer = setTimeout(function () {\n                fn.apply(context, args);\n            }, delay);\n        };\n    }\n    function preloadImage(src, success, error) {\n        const img = new Image();\n        img.onload = function () {\n            success(img);\n        };\n        img.onerror = function () {\n            error(img);\n        };\n        img.src = src;\n    }\n    function requestFullscreen(element) {\n        if (element.requestFullscreen) {\n            element.requestFullscreen();\n        } else if (element.mozRequestFullScreen) {\n            element.mozRequestFullScreen();\n        } else if (element.webkitRequestFullscreen) {\n            element.webkitRequestFullscreen();\n        } else if (element.msRequestFullscreen) {\n            element.msRequestFullscreen();\n        }\n    }\n    function exitFullscreen() {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        }\n    }\n\n\n    function getScrollbarWidth() {\n        const scrollDiv = document.createElement('div');\n        scrollDiv.style.cssText = 'width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;';\n        document.body.appendChild(scrollDiv);\n        const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        document.body.removeChild(scrollDiv);\n        return scrollbarWidth;\n    }\n\n    function hasScrollbar() {\n        return document.body.scrollHeight > (window.innerHeight || document.documentElement.clientHeight);\n    }\n\n\n    function supportTouch() {\n        return !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch);\n    }\n\n    */\n \n\n     function setGrabCursor(imageData, stageData, stage, isRotated) {\n        const imageWidth = !isRotated ? imageData.w : imageData.h;\n        const imageHeight = !isRotated ? imageData.h : imageData.w;\n        if (imageHeight > stageData.h || imageWidth > stageData.w) {\n            stage.addClass('is-grab');\n        }\n        if (imageHeight <= stageData.h && imageWidth <= stageData.w) {\n            stage.removeClass('is-grab');\n        }\n    }\n\n    function getImageNameFromUrl(url) {\n        const reg = /^.*?\\/*([^/?]*)\\.[a-z]+(\\?.+|$)/gi;\n        const txt = url.replace(reg, '$1');\n        return txt;\n    }\n\n    return {\n        document: document,\n        throttle: langx.debounce,\n        preloadImage: function preloadImage(src, success, error) {\n            images.preload(src).then(function(data){\n                success(data.imgs[0]);\n            },error);\n        },\n        requestFullscreen: noder.fullscreen,\n        exitFullscreen: noder.fullscreen,\n        getImageNameFromUrl: getImageNameFromUrl,\n        hasScrollbar: geom.hasScrollbar,\n        getScrollbarWidth: geom.scrollbarWidth,\n        setGrabCursor: setGrabCursor,\n        supportTouch: function() {\n            return browser.support.tocuh;\n        }\n    }\n});\ndefine('skylark-photoviewer/constants',[\n    './domq',\n    './utilities'\n], function ($, utilities) {\n    'use strict';\n    const $W = $(window);\n    const $D = $(utilities.document);\n    const CLICK_EVENT = 'click';\n    const RESIZE_EVENT = 'resize';\n    const KEYDOWN_EVENT = 'keydown';\n    const WHEEL_EVENT = 'wheel mousewheel DOMMouseScroll';\n    const TOUCH_START_EVENT = utilities.supportTouch() ? 'touchstart' : 'mousedown';\n    const TOUCH_MOVE_EVENT = utilities.supportTouch() ? 'touchmove' : 'mousemove';\n    const TOUCH_END_EVENT = utilities.supportTouch() ? 'touchend' : 'mouseup';\n    const NS = 'photoviewer';\n    const CLASS_NS = '.' + NS;\n    const EVENT_NS = '.' + NS;\n    const PUBLIC_VARS = {\n        isMoving: false,\n        isResizing: false,\n        zIndex: 0\n    };\n    return {\n        $W: $W,\n        $D: $D,\n        CLICK_EVENT: CLICK_EVENT,\n        RESIZE_EVENT: RESIZE_EVENT,\n        KEYDOWN_EVENT: KEYDOWN_EVENT,\n        WHEEL_EVENT: WHEEL_EVENT,\n        TOUCH_START_EVENT: TOUCH_START_EVENT,\n        TOUCH_MOVE_EVENT: TOUCH_MOVE_EVENT,\n        TOUCH_END_EVENT: TOUCH_END_EVENT,\n        NS: NS,\n        CLASS_NS: CLASS_NS,\n        EVENT_NS: EVENT_NS,\n        PUBLIC_VARS: PUBLIC_VARS\n    };\n});\ndefine('skylark-photoviewer/window',[\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-plugins-base\",\r\n    'skylark-jquery',\r\n    \"skylark-domx-plugins-interact/movable\",\r\n    \"skylark-domx-plugins-interact/resizable\",\r\n    './constants',\r\n    './utilities'\r\n\r\n], function (eventer,plugins,$,  Movable, Resizable, Constants, Utilities,) {\r\n    'use strict';\r\n\r\n    var Window = plugins.Plugin.inherit({\r\n        klassName : \"Window\",\r\n\r\n        pluginName : \"lark.domx.window\",\r\n\r\n        options : {\r\n            selectors : {\r\n                headerPane  : \"\",\r\n                contentPane : \"\",\r\n                footerPane  : \"\",\r\n                titlebar : \"\",\r\n                buttons : {\r\n                    \"fullscreen\" : \".photoviewer-button-fullscreen\",\r\n                    \"maximize\" : \".photoviewer-button-maximize\",\r\n                    \"minimize\" : \".photoviewer-button-minimize\",     \r\n                    \"close\" : \".photoviewer-button-close\"\r\n                }\r\n            },\r\n\r\n            fixedContent: true,\r\n            initMaximized: false,\r\n\r\n\r\n\r\n\r\n            movable : {\r\n                dragHandle: false\r\n            },\r\n            resizable : {\r\n                minWidth: 320,\r\n                minHeight: 320,\r\n            }\r\n        },\r\n\r\n        _construct : function(elm,options) {\r\n            plugins.Plugin.prototype._construct.call(this,elm,options);\r\n            this.isOpened = false;\r\n            this.isMaximized = false;\r\n\r\n            this.$photoviewer = $(this._elm);\r\n\r\n            this._velm = this.elmx();\r\n\r\n            if (this.options.movable) {\r\n                this._movable = new Movable(elm,{\r\n                    handle : this.options.movable.dragHandle,\r\n                    starting : (e) => {\r\n                        const   dragCancel = Constants.CLASS_NS + '-button', \r\n                                elemCancel = $(e.target).closest(dragCancel);\r\n                        if (elemCancel.length) {\r\n                            return false;\r\n                        }\r\n                        if (Constants.PUBLIC_VARS['isResizing'] || this.isMaximized) {\r\n                            return false;\r\n                        }\r\n\r\n                        return true;\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n            if (this.options.resizable) {\r\n\r\n                this._resizable = new Resizable(elm,{\r\n                    handle : {\r\n                        border : {\r\n                            directions : {\r\n                                top: true, //n\r\n                                left: true, //w\r\n                                right: true, //e\r\n                                bottom: true, //s\r\n                                topLeft : true, // nw\r\n                                topRight : true, // ne\r\n                                bottomLeft : true, // sw\r\n                                bottomRight : true // se                         \r\n                            },\r\n                            classes : {\r\n                                all : `${ Constants.NS }-resizable-handle`,\r\n                                top : `${ Constants.NS }-resizable-handle-n`,\r\n                                left: `${ Constants.NS }-resizable-handle-w`,\r\n                                right: `${ Constants.NS }-resizable-handle-e`,\r\n                                bottom: `${ Constants.NS }-resizable-handle-s`, \r\n                                topLeft : `${ Constants.NS }-resizable-handle-nw`, \r\n                                topRight : `${ Constants.NS }-resizable-handle-ne`,\r\n                                bottomLeft : `${ Constants.NS }-resizable-handle-sw`,             \r\n                                bottomRight : `${ Constants.NS }-resizable-handle-se`                         \r\n                            }                        \r\n                        }\r\n                    },\r\n                    constraints : {\r\n                        minWidth : this.options.resizable.minWidth,\r\n                        minHeight : this.options.resizable.minHeight\r\n                    },\r\n                    started : function(){\r\n                        Constants.PUBLIC_VARS['isResizing'] = true;\r\n                    },\r\n                    moving : function(e) {\r\n                        /*\r\n                        const imageWidth = $(image).width();\r\n                        const imageHeight = $(image).height();\r\n                        const stageWidth = $(stage).width();\r\n                        const stageHeight = $(stage).height();\r\n                        const left = (stageWidth - imageWidth) /2;\r\n                        const top = (stageHeight- imageHeight) /2;\r\n                        $(image).css({\r\n                            left,\r\n                            top\r\n                        });\r\n                        */\r\n                    },\r\n                    stopped :function () {\r\n                        Constants.PUBLIC_VARS['isResizing'] = false;\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n            this.$close = this._velm.$(this.options.selectors.buttons.close);\r\n            this.$maximize = this._velm.$(this.options.selectors.buttons.maximize);\r\n            this.$minimize = this._velm.$(this.options.selectors.buttons.minimize);\r\n            this.$fullscreen = this._velm.$(this.options.selectors.buttons.fullscreen);\r\n\r\n\r\n            this.$close.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, e => {\r\n                this.close();\r\n            });\r\n            this.$fullscreen.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, () => {\r\n                this.fullscreen();\r\n            });\r\n            this.$maximize.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, () => {\r\n                this.maximize();\r\n            });\r\n            this.$photoviewer.off(Constants.KEYDOWN_EVENT + Constants.EVENT_NS).on(Constants.KEYDOWN_EVENT + Constants.EVENT_NS, e => {\r\n                this._keydown(e);\r\n            });\r\n            Constants.$W.on(Constants.RESIZE_EVENT + Constants.EVENT_NS, ()=>{\r\n                            eventer.resized(this._elm);\r\n                        });\r\n        },\r\n        close: function() {\r\n            this.trigger('closing', this);\r\n            this.$photoviewer.remove();\r\n            this.isOpened = false;\r\n            this.isMaximized = false;\r\n\r\n            if (!$(Constants.CLASS_NS + '-modal').length) {\r\n                if (this.options.fixedContent) {\r\n                    $('html').css({\r\n                        overflow: '',\r\n                        'padding-right': ''\r\n                    });\r\n                }\r\n                if (this.options.multiInstances) {\r\n                    Constants.PUBLIC_VARS['zIndex'] = this.options.zIndex;\r\n                }\r\n                Constants.$W.off(Constants.RESIZE_EVENT + Constants.EVENT_NS);\r\n            }\r\n            this.trigger('closed', this);\r\n        },\r\n\r\n        maximize: function() {\r\n            this.$photoviewer.get(0).focus();\r\n            if (!this.isMaximized) {\r\n                this.modalData = {\r\n                    width: this.$photoviewer.width(),\r\n                    height: this.$photoviewer.height(),\r\n                    left: this.$photoviewer.offset().left,\r\n                    top: this.$photoviewer.offset().top\r\n                };\r\n                this.$photoviewer.addClass(Constants.NS + '-maximize');\r\n                this.$photoviewer.css({\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    left: 0,\r\n                    top: 0\r\n                });\r\n                this.isMaximized = true;\r\n            } else {\r\n                this.$photoviewer.removeClass(Constants.NS + '-maximize');\r\n                const initModalLeft = (Constants.$W.width() - this.options.modalWidth) / 2 + Constants.$D.scrollLeft();\r\n                const initModalTop = (Constants.$W.height() - this.options.modalHeight) / 2 + Constants.$D.scrollTop();\r\n                this.$photoviewer.css({\r\n                    width: this.modalData.width ? this.modalData.width : this.options.modalWidth,\r\n                    height: this.modalData.height ? this.modalData.height : this.options.modalHeight,\r\n                    left: this.modalData.left ? this.modalData.left : initModalLeft,\r\n                    top: this.modalData.top ? this.modalData.top : initModalTop\r\n                });\r\n                this.isMaximized = false;\r\n            }\r\n\r\n            eventer.resized(this._elm);\r\n        },\r\n        fullscreen: function() {\r\n            this.$photoviewer.get(0).focus();\r\n            Utilities.requestFullscreen(this.$photoviewer[0]);\r\n        },\r\n        _keydown: function(e) {\r\n            if (!this.options.keyboard) {\r\n                return false;\r\n            }\r\n            const keyCode = e.keyCode || e.which || e.charCode;\r\n            const ctrlKey = e.ctrlKey || e.metaKey;\r\n            const altKey = e.altKey || e.metaKey;\r\n            switch (keyCode) {\r\n\r\n                // Q\r\n                case 81:\r\n                    this.close();\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n\r\n    return Window;\r\n});\ndefine('skylark-photoviewer/core',[\n    \"skylark-domx-plugins-pictures/viewer\",\n    './domq',\n    './defaults',\n    './constants',\n    './utilities',\n    \"./window\",\n], function (Imager,$, DEFAULTS, Constants, Utilities, Window) {\n    'use strict';\n\n    \n    class PhotoViewer {\n        constructor(items, options, el) {\n            this.options = $.extend(true, {}, DEFAULTS, options);\n            if (options && $.isArray(options.footerToolbar)) {\n                this.options.footerToolbar = options.footerToolbar;\n            }\n            if (options && $.isArray(options.headerToolbar)) {\n                this.options.headerToolbar = options.headerToolbar;\n            }\n            this.$el = $(el);\n            this.isOpened = false;\n            this.isMaximized = false;\n            this.isRotated = false;\n            this.rotateAngle = 0;\n            this.isDoResize = false;\n            this.imageData = {};\n            this.modalData = {\n                width: null,\n                height: null,\n                left: null,\n                top: null\n            };\n            this.init(items, this.options);\n        }\n        init(items, opts) {\n            this.groupData = items;\n            this.groupIndex = opts['index'];\n            Constants.PUBLIC_VARS['zIndex'] = Constants.PUBLIC_VARS['zIndex'] === 0 ? opts['zIndex'] : Constants.PUBLIC_VARS['zIndex'];\n            const imgSrc = items[this.groupIndex]['src'];\n            this.open();\n            this.loadImage(imgSrc);\n            ///if (opts.draggable) {\n            ///    this.draggable(this.$photoviewer, this.dragHandle, Constants.CLASS_NS + '-button');\n            ///}\n            ///if (opts.movable) {\n            ///    this.movable(this.$stage, this.$image);\n            ///}\n            ///if (opts.resizable) {\n            ///    this.resizable(this.$photoviewer, this.$stage, this.$image, opts.modalWidth, opts.modalHeight);\n            ///}\n        }\n        _createBtns(toolbar) {\n            const btns = [\n                'minimize',\n                'maximize',\n                'close',\n                'zoomIn',\n                'zoomOut',\n                'prev',\n                'next',\n                'fullscreen',\n                'actualSize',\n                'rotateLeft',\n                'rotateRight'\n            ];\n            let btnsHTML = '';\n            $.each(toolbar, (index, item) => {\n                const btnClass = `${ Constants.NS }-button ${ Constants.NS }-button-${ item }`;\n                if (btns.indexOf(item) >= 0) {\n                    btnsHTML += `<button class=\"${ btnClass }\" title=\"${ this.options.i18n[item] }\">\n          ${ this.options.icons[item] }\n          </button>`;\n                } else if (this.options.customButtons[item]) {\n                    btnsHTML += `<button class=\"${ btnClass }\" title=\"${ this.options.customButtons[item].title || '' }\">\n          ${ this.options.customButtons[item].text }\n          </button>`;\n                }\n            });\n            return btnsHTML;\n        }\n        _createTitle() {\n            return this.options.title ? `<div class=\"${ Constants.NS }-title\"></div>` : '';\n        }\n        _createTemplate() {\n            const photoviewerHTML = `<div class=\"${ Constants.NS }-modal\" tabindex=\"0\">\n        <div class=\"${ Constants.NS }-inner\">\n          <div class=\"${ Constants.NS }-header\">\n            <div class=\"${ Constants.NS }-toolbar ${ Constants.NS }-toolbar-header\">\n            ${ this._createBtns(this.options.headerToolbar) }\n            </div>\n            ${ this._createTitle() }\n          </div>\n          <div class=\"${ Constants.NS }-stage\">\n            <img class=\"${ Constants.NS }-image\" src=\"\" alt=\"\" />\n          </div>\n          <div class=\"${ Constants.NS }-footer\">\n            <div class=\"${ Constants.NS }-toolbar ${ Constants.NS }-toolbar-footer\">\n            ${ this._createBtns(this.options.footerToolbar) }\n            </div>\n          </div>\n        </div>\n      </div>`;\n            return photoviewerHTML;\n        }\n        build() {\n            const photoviewerHTML = this._createTemplate();\n            const $photoviewer = $(photoviewerHTML);\n            this.$photoviewer = $photoviewer;\n            this.$stage = $photoviewer.find(Constants.CLASS_NS + '-stage');\n            this.$title = $photoviewer.find(Constants.CLASS_NS + '-title');\n            this.$image = $photoviewer.find(Constants.CLASS_NS + '-image');\n            this.$close = $photoviewer.find(Constants.CLASS_NS + '-button-close');\n            this.$maximize = $photoviewer.find(Constants.CLASS_NS + '-button-maximize');\n            this.$minimize = $photoviewer.find(Constants.CLASS_NS + '-button-minimize');\n            this.$zoomIn = $photoviewer.find(Constants.CLASS_NS + '-button-zoomIn');\n            this.$zoomOut = $photoviewer.find(Constants.CLASS_NS + '-button-zoomOut');\n            this.$actualSize = $photoviewer.find(Constants.CLASS_NS + '-button-actualSize');\n            this.$fullscreen = $photoviewer.find(Constants.CLASS_NS + '-button-fullscreen');\n            this.$rotateLeft = $photoviewer.find(Constants.CLASS_NS + '-button-rotateLeft');\n            this.$rotateRight = $photoviewer.find(Constants.CLASS_NS + '-button-rotateRight');\n            this.$prev = $photoviewer.find(Constants.CLASS_NS + '-button-prev');\n            this.$next = $photoviewer.find(Constants.CLASS_NS + '-button-next');\n            this.$stage.addClass('stage-ready');\n            this.$image.addClass('image-ready');\n            this.$photoviewer.css('z-index', Constants.PUBLIC_VARS['zIndex']);\n            if (!this.options.dragHandle || this.options.dragHandle === Constants.CLASS_NS + '-modal') {\n                this.dragHandle = this.$photoviewer;\n            } else {\n                this.dragHandle = this.$photoviewer.find(this.options.dragHandle);\n            }\n            $(this.options.appendTo).eq(0).append(this.$photoviewer);\n\n            this._window = new Window(this.$photoviewer[0],{\n                dragHandle : this.options.dragHandle,\n\n            });\n            this._imager = new Imager(this.$stage[0],{\n                ratioThreshold: this.options.ratioThreshold,\n                minRatio: this.options.minRatio,\n                maxRatio: this.options.maxRatio,\n                movable : true,\n\n                classes : {\n                    grab : \"is-grab\",\n                    loader : \"${ Constants.NS }-loader\"\n                }                \n            });\n\n            this._addEvents();\n            this._addCustomButtonEvents();\n\n            this.$photoviewer.on(\"resized\",()=>{\n                this._imager.resize();;\n            });\n        }\n        open() {\n            this._triggerHook('beforeOpen', this);\n            if (!this.options.multiInstances) {\n                $(Constants.CLASS_NS + '-modal').eq(0).remove();\n            }\n            if (!$(Constants.CLASS_NS + '-modal').length && this.options.fixedContent) {\n                $('html').css({ overflow: 'hidden' });\n                if (Utilities.hasScrollbar()) {\n                    const scrollbarWidth = Utilities.getScrollbarWidth();\n                    if (scrollbarWidth) {\n                        $('html').css({ 'padding-right': scrollbarWidth });\n                    }\n                }\n            }\n            this.build();\n            this.setModalPos(this.$photoviewer);\n            this.$photoviewer.get(0).focus();\n            this._triggerHook('opened', this);\n        }\n        close() {\n            this._window.close();\n        }\n        setModalPos(modal) {\n            const winWidth = Constants.$W.width();\n            const winHeight = Constants.$W.height();\n            const scrollLeft = Constants.$D.scrollLeft();\n            const scrollTop = Constants.$D.scrollTop();\n            const modalWidth = this.options.modalWidth;\n            const modalHeight = this.options.modalHeight;\n            if (this.options.initMaximized) {\n                modal.addClass(Constants.NS + '-maximize');\n                modal.css({\n                    width: '100%',\n                    height: '100%',\n                    left: 0,\n                    top: 0\n                });\n                this.isOpened = true;\n                this.isMaximized = true;\n            } else {\n                modal.css({\n                    width: modalWidth,\n                    height: modalHeight,\n                    left: (winWidth - modalWidth) / 2 + scrollLeft + 'px',\n                    top: (winHeight - modalHeight) / 2 + scrollTop + 'px'\n                });\n            }\n        }\n        setModalSize(img) {\n            const winWidth = Constants.$W.width();\n            const winHeight = Constants.$W.height();\n            const scrollLeft = Constants.$D.scrollLeft();\n            const scrollTop = Constants.$D.scrollTop();\n            const stageCSS = {\n                left: this.$stage.css('left'),\n                right: this.$stage.css('right'),\n                top: this.$stage.css('top'),\n                bottom: this.$stage.css('bottom'),\n                borderLeft: this.$stage.css('border-left-width'),\n                borderRight: this.$stage.css('border-right-width'),\n                borderTop: this.$stage.css('border-top-width'),\n                borderBottom: this.$stage.css('border-bottom-width')\n            };\n            const modalWidth = img.width + parseFloat(stageCSS.left) + parseFloat(stageCSS.right) + parseFloat(stageCSS.borderLeft) + parseFloat(stageCSS.borderRight);\n            const modalHeight = img.height + parseFloat(stageCSS.top) + parseFloat(stageCSS.bottom) + parseFloat(stageCSS.borderTop) + parseFloat(stageCSS.borderBottom);\n            const gapThreshold = (this.options.gapThreshold > 0 ? this.options.gapThreshold : 0) + 1;\n            const scale = Math.min(winWidth / (modalWidth * gapThreshold), winHeight / (modalHeight * gapThreshold), 1);\n            let minWidth = Math.max(modalWidth * scale, this.options.modalWidth);\n            let minHeight = Math.max(modalHeight * scale, this.options.modalHeight);\n            minWidth = this.options.fixedModalSize ? this.options.modalWidth : Math.round(minWidth);\n            minHeight = this.options.fixedModalSize ? this.options.modalHeight : Math.round(minHeight);\n            const modalCSSObj = {\n                width: minWidth + 'px',\n                height: minHeight + 'px',\n                left: (winWidth - minWidth) / 2 + scrollLeft + 'px',\n                top: (winHeight - minHeight) / 2 + scrollTop + 'px'\n            };\n            if (this.options.initAnimation) {\n                this.$photoviewer.animate(modalCSSObj, 400, 'ease-in-out', () => {\n                    this.setImageSize(img);\n                });\n            } else {\n                this.$photoviewer.css(modalCSSObj);\n                this.setImageSize(img);\n            }\n            this.isOpened = true;\n        }\n\n        setImageSize(img) {\n            this._imager.setImageSize(img);\n        }\n        loadImage(imgSrc, fn, err) {\n            this._imager.loadImage(imgSrc,(img) => {\n                this.setModalSize(img);\n                if (fn) {\n                    fn.call();\n                }\n            },err);\n            if (this.options.title) {\n                this.setImageTitle(imgSrc);\n            }\n        }\n        setImageTitle(url) {\n            const title = this.groupData[this.groupIndex].title || Utilities.getImageNameFromUrl(url);\n            this.$title.html(title);\n        }\n        jump(step) {\n            this._triggerHook('beforeChange', [\n                this,\n                this.groupIndex\n            ]);\n            this.groupIndex = this.groupIndex + step;\n            this.jumpTo(this.groupIndex);\n        }\n        jumpTo(index) {\n            index = index % this.groupData.length;\n            if (index >= 0) {\n                index = index % this.groupData.length;\n            } else if (index < 0) {\n                index = (this.groupData.length + index) % this.groupData.length;\n            }\n            this.groupIndex = index;\n            this.loadImage(this.groupData[index].src, () => {\n                this._triggerHook('changed', [\n                    this,\n                    index\n                ]);\n            }, () => {\n                this._triggerHook('changed', [\n                    this,\n                    index\n                ]);\n            });\n        }\n        zoom(ratio, origin, e) {\n            this._imager.zoom(ratio,origin,e);\n        }\n        zoomTo(ratio, origin, e) {\n            this._imager.zoomTo(ratio,origin,e);\n        }\n        rotate(angle) {\n            this._imager.rotate(angle);\n        }\n        rotateTo(angle) {\n            this._imager.rotateTo(angle);\n        }\n        resize() {\n            return this._imager.resize();\n        }\n        maximize() {\n            this._window.maximize();\n        }\n        fullscreen() {\n            this._window.fullscreen();\n        }\n        _keydown(e) {\n            if (!this.options.keyboard) {\n                return false;\n            }\n            const keyCode = e.keyCode || e.which || e.charCode;\n            const ctrlKey = e.ctrlKey || e.metaKey;\n            const altKey = e.altKey || e.metaKey;\n            switch (keyCode) {\n                // ←\n                case 37:\n                    this.jump(-1);\n                    break;\n                // →\n                case 39:\n                    this.jump(1);\n                    break;\n                // Q\n                case 81:\n                    this.close();\n                    break;\n                default:\n            }\n        }\n        _addEvents() {\n\n            this.$zoomIn.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, e => {\n                this.zoom(this.options.ratioThreshold * 3, {\n                    x: this.$stage.width() / 2,\n                    y: this.$stage.height() / 2\n                }, e);\n            });\n            this.$zoomOut.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, e => {\n                this.zoom(-this.options.ratioThreshold * 3, {\n                    x: this.$stage.width() / 2,\n                    y: this.$stage.height() / 2\n                }, e);\n            });\n            this.$actualSize.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, e => {\n                this.zoomTo(1, {\n                    x: this.$stage.width() / 2,\n                    y: this.$stage.height() / 2\n                }, e);\n            });\n            this.$prev.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, () => {\n                this.jump(-1);\n            });\n\n            this.$next.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, () => {\n                this.jump(1);\n            });\n            this.$rotateLeft.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, () => {\n                this.rotate(-90);\n            });\n            this.$rotateRight.off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, () => {\n                this.rotate(90);\n            });\n\n            this.$photoviewer.off(Constants.KEYDOWN_EVENT + Constants.EVENT_NS).on(Constants.KEYDOWN_EVENT + Constants.EVENT_NS, e => {\n                this._keydown(e);\n            });\n            ///Constants.$W.on(Constants.RESIZE_EVENT + Constants.EVENT_NS, this.resize());\n        }\n        _addCustomButtonEvents() {\n            for (const btnKey in this.options.customButtons) {\n                this.$photoviewer.find(Constants.CLASS_NS + '-button-' + btnKey).off(Constants.CLICK_EVENT + Constants.EVENT_NS).on(Constants.CLICK_EVENT + Constants.EVENT_NS, e => {\n                    this.options.customButtons[btnKey].click.apply(this, [\n                        this,\n                        e\n                    ]);\n                });\n            }\n        }\n        _triggerHook(e, data) {\n            if (this.options.callbacks[e]) {\n                this.options.callbacks[e].apply(this, $.isArray(data) ? data : [data]);\n            }\n        }\n    }\n    //$.extend(PhotoViewer.prototype, draggable, movable, resizable);\n\n    ///$.extend(PhotoViewer.prototype, movable);\n\n    window.PhotoViewer = PhotoViewer;\n    return PhotoViewer;\n});\ndefine('skylark-photoviewer/main',[\n\t'./core'\n], function (PhotoViewer) {\n    'use strict';\n    return PhotoViewer;\n});\ndefine('skylark-photoviewer', ['skylark-photoviewer/main'], function (main) { return main; });\n\n"]}